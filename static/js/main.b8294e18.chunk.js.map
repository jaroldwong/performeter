{"version":3,"sources":["components/Header.js","components/Tabs.js","components/CompetencyCounter.js","components/JobFunction.js","constants.js","components/IndicatorDropdown.js","components/InlineEditableContent.js","components/SupportingComment.js","components/JobFunctions.js","components/Achievements.js","components/Goal.js","components/Goals.js","reducers/jobFunctionReducer.js","contexts/AppContext.js","App.js","index.js"],"names":["Header","state","achievements","goals","resetData","className","href","onClick","jobFunctionsText","map","item","percentage","description","comments","reduce","acc","curr","concat","competency","indicator","example","achievementsText","goalsText","goal","title","value","string","window","open","document","write","exportText","Tabs","activeTab","updateNav","CompetencyCounter","competencyCount","Communication","Leadership","Teamwork","current","Object","keys","includes","competencyColor","key","index","style","padding","JobFunction","props","jobFunction","id","length","max","parseInt","name","onChange","updateJobFunction","placeholder","addComment","children","CORE_COMPETENCIES","BEHAVIORAL_INDICATORS","IndicatorDropdown","onUpdate","useState","isActive","setIsActive","handleSetIndicator","e","target","innerHTML","aria-haspopup","aria-controls","prevState","role","InlineEditableContent","handleChange","setState","html","isEmpty","handleFocus","innerText","defaultValue","handleBlur","replace","initialValue","render","baseStyle","outline","borderBottom","styles","display","minWidth","innerRef","contentEditable","onFocus","onBlur","tagName","React","createRef","Component","SupportingComment","updateComment","deleteComment","showIndicatorDropdown","setShowIndicatorDropdown","updateIndicator","marginLeft","marginBottom","newComment","updatedComment","JobFunctions","jobFunctions","addJobFunction","dispatch","comment","commentIndex","Achievements","updateAchievements","Goal","handleGoalChange","Goals","addGoal","updateGoal","jobFunctionReducer","action","type","Math","random","toString","slice","payload","event","newComments","jobFunctionId","find","jf","updatedComments","idx","newJobFunction","filteredComments","filter","_","updatedJobFunction","Error","AppContext","createContext","reducer","tab","localData","localStorage","getItem","initialAppState","JSON","parse","AppContextProvider","useReducer","appState","appDispatch","useEffect","setItem","stringify","Provider","App","initialState","useContext","setAchievements","setGoals","data","allComments","flat","newGoalIndex","newGoal","updatedGoals","goalIndex","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b8294e18.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst exportText = ({ state, achievements, goals }) => {\n  const jobFunctionsTitle = '<p><strong>Job Functions</strong></p>';\n\n  const jobFunctionsText = state.map((item) => {\n    const heading = `<p>${item.percentage} - ${item.description} </p>`;\n\n    const comments = item.comments.reduce((acc, curr) => {\n      return acc.concat(\n        `In the competency of ${curr.competency}, I ${curr.indicator} by ${curr.example}<br><br>`\n      );\n    }, '');\n\n    return heading + comments;\n  });\n\n  const achievementsTitle = '<p><strong>Achievements</strong></p>';\n  const achievementsText = `${achievements}<br><br>`;\n  const goalsTitle = '<p><strong>Goals</strong></p>';\n  const goalsText = goals.map((goal) => {\n    return `${goal.title}<br> ${goal.value}`;\n  });\n\n  const combinedText = [\n    jobFunctionsTitle,\n    ...jobFunctionsText,\n    achievementsTitle,\n    achievementsText,\n    goalsTitle,\n    ...goalsText,\n  ];\n\n  const string = combinedText.reduce((acc, curr) => {\n    return acc.concat(curr);\n  }, '');\n\n  const wnd = window.open('about:blank', '', '_blank');\n  wnd.document.write(string);\n};\n\nconst Header = ({ state, achievements, goals, resetData }) => (\n  <nav className=\"navbar is-light\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"/\">\n        <h1 className=\"title is-4\">PerforMeter</h1>\n      </a>\n    </div>\n\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <button className=\"button is-danger\" onClick={resetData}>\n              Reset\n            </button>\n            <button\n              className=\"button\"\n              onClick={() => exportText({ state, achievements, goals })}\n            >\n              Export as Text\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n\nHeader.propTypes = {\n  state: PropTypes.arrayOf(PropTypes.object),\n  resetData: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Tabs = ({ activeTab, updateNav }) => {\n  return (\n    <div className=\"tabs\">\n      <ul>\n        <li className={activeTab === 'Job Functions' ? 'is-active' : null}>\n          <a href=\"#JobFunctions\" onClick={updateNav}>\n            Job Functions\n          </a>\n        </li>\n        <li className={activeTab === 'Achievements' ? 'is-active' : null}>\n          <a href=\"#Achievements\" onClick={updateNav}>\n            Achievements\n          </a>\n        </li>\n        <li className={activeTab === 'Future Goals' ? 'is-active' : null}>\n          <a href=\"#Goals\" onClick={updateNav}>\n            Future Goals\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default Tabs;\n","import React from 'react';\n\nconst CompetencyCounter = ({ comments }) => {\n  let competencyCount = {\n    Communication: 0,\n    'Decision Making': 0,\n    'Diversity, Equity, Inclusion': 0,\n    'Health and Safety': 0,\n    Leadership: 0,\n    'Problem Solving and Innovation': 0,\n    'Quality Improvement': 0,\n    'Service Focus': 0,\n    'Stewardship and Managing Resources': 0,\n    'Strategic Planning': 0,\n    Teamwork: 0,\n    'Managing People (Supervisors)': 0,\n  };\n\n  competencyCount = comments.reduce((acc, current) => {\n    if (Object.keys(competencyCount).includes(current.competency)) {\n      acc[current.competency] += 1;\n    }\n    return acc;\n  }, competencyCount);\n\n  const competencyColor = Object.keys(competencyCount).reduce(\n    (acc, current) => {\n      if (competencyCount[current] === 0) {\n        acc[current] = '';\n      } else if (competencyCount[current] === 1) {\n        acc[current] = 'is-warning';\n      } else {\n        acc[current] = 'is-success';\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return (\n    <div className=\"fixed\">\n      <h1 className=\"title is-6\">Core Competencies</h1>\n\n      <ul className=\"unstyled-list\">\n        {Object.keys(competencyCount).map((key, index) => (\n          <li key={`key + ${index}`} style={{ padding: '3px' }}>\n            <div className=\"tags has-addons\">\n              <span className={'tag ' + competencyColor[key]}>\n                {competencyCount[key]}\n              </span>\n              <span className={'tag ' + competencyColor[key]}>{key}</span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CompetencyCounter;\n","import React from 'react';\n\nconst JobFunction = (props) => {\n  const percentValues = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10];\n  const { comments, description, id, percentage } = props.jobFunction;\n\n  return (\n    <div>\n      <div className=\"box\">\n        <h2 className=\"subtitle\">Job Function</h2>\n        <progress\n          className=\"progress is-success\"\n          value={percentage ? comments.length : 0}\n          max={percentage ? parseInt(percentage) / 10 : 0}\n        >\n          {percentage}\n        </progress>\n        <div className=\"field\">\n          <label className=\"label\">Percentage</label>\n          <div className=\"control\">\n            <div className=\"select is-small\">\n              <select\n                name=\"percentage\"\n                value={percentage}\n                onChange={props.updateJobFunction}\n              >\n                <option value=\"\">Select</option>\n                {percentValues.map((value) => (\n                  <option\n                    value={`${value}%`}\n                    key={`${id}-${value}`}\n                  >{`${value}%`}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <div className=\"control\">\n            <textarea\n              name=\"description\"\n              className=\"textarea\"\n              placeholder=\"Copy and paste job function here\"\n              value={description}\n              onChange={props.updateJobFunction}\n            ></textarea>\n          </div>\n        </div>\n        <button className=\"button\" onClick={props.addComment}>\n          Add Supporting Comment\n        </button>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default JobFunction;\n","export const CORE_COMPETENCIES = [\n  'Communication',\n  'Decision Making',\n  'Diversity, Equity and Inclusion',\n  'Health and Safety',\n  'Leadership',\n  'Problem Solving and Innovation',\n  'Quality Improvement',\n  'Service Focus',\n  'Stewardship and Managing Resources',\n  'Strategic Planning',\n  'Teamwork',\n  'Managing People (Supervisors)',\n];\n\nexport const BEHAVIORAL_INDICATORS = {\n  Communication: [\n    'demonstrated effective written and oral communication skills',\n    'communicated clearly and knowledgeably',\n    'shared information with others',\n    'sought input from others',\n    'adapted communication to diverse audiences',\n    'protected private and confidential information',\n  ],\n  'Decision Making': [\n    'involved others in making decisions',\n    'factored organizational goals into decisions',\n    'made clear, transparent, timely decisions',\n  ],\n  'Diversity, Equity and Inclusion': [\n    'demonstrated respect for people and their differences',\n    'understood the benefits of a diverse workforce',\n    'am trusted and respected by others',\n    'included and welcomed others',\n    'worked to understand the perspectives of others',\n    'promoted opportunities to experience diversity on campus',\n  ],\n  'Health and Safety': [\n    'modeled and promoted safe behaviors in all work environments',\n    'demonstrated behavior consistent with UC health and safety standards',\n    'identified safety issues and problems, and took corrective action',\n    'managed risks',\n  ],\n  Leadership: [\n    'applied skills and knowledge to achieve department and organizational goals',\n    'helped others perform at their best',\n    'Self-aware and open to feedback',\n    'added value; high quality work',\n    'understood and supported organizational goals',\n    'built wide sphere of influence to enhance individual and organizational effectiveness',\n  ],\n  'Problem Solving and Innovation': [\n    'collaborated with others to solve problems',\n    'analyzed and prioritized situations to identify and solve problems',\n    'increased efficiency and improved quality',\n  ],\n  'Quality Improvement': [\n    'understood the value of innovation and of quality improvement',\n    'improved processes and practices by identifying inefficiencies and redundancies',\n    'collaborated with campus partners to improve the quality of products and service',\n    'demonstrated efficiency and quality in one’s own work',\n    'managed and sustained change initiatives',\n  ],\n  'Service Focus': [\n    'understood the importance of quality service',\n    'delivered quality service',\n    'anticipated and fulfilled customers’ needs',\n    'skillfully served diverse customer base',\n    'asked customers for feedback',\n    'referred customers to appropriate/additional resources',\n    'strived to improve the quality of service',\n  ],\n  'Stewardship and Managing Resources': [\n    'used individual and campus resources effectively and efficiently',\n    'innovated in terms of resource and environmental conservation',\n    'protected physical and intellectual property',\n    'leveraged resources for optimal outcomes',\n    'performed actions consistent with UC policies',\n  ],\n  'Strategic Planning': [\n    'understood and communicated strategic goals and plans to achieve them',\n    'mobilized resources to achieve shared strategic vision and goals',\n    'aligned knowledge and talent with program goals',\n    'developed and implements metrics to measure results',\n    'anticipated and solved problems',\n  ],\n  Teamwork: [\n    'built productive and working relationships',\n    'cooperated and collaborated with colleagues',\n    'treated others with respect',\n    'resolved conflicts among team members',\n    'balanced individual and team goals',\n  ],\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport { BEHAVIORAL_INDICATORS } from '../constants';\n\nconst IndicatorDropdown = ({ competency, indicator, onUpdate }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const handleActiveToggle = () => {\n    setIsActive((prevState) => !prevState);\n  };\n\n  const handleSetIndicator = (e) => {\n    onUpdate(e.target.innerHTML);\n  };\n\n  if (!competency) {\n    return (\n      <div className=\"dropdown\">\n        <div className=\"dropdown-trigger\">\n          <button\n            className=\"button is-small\"\n            aria-haspopup=\"true\"\n            aria-controls=\"dropdown-menu\"\n          >\n            <span>select a competency first</span>\n            <span className=\"icon is-small\">v</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`dropdown ${isActive && 'is-active'}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-small\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={handleActiveToggle}\n        >\n          <span>[behavioral indicator]</span>\n          <span className=\"icon is-small\">v</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {BEHAVIORAL_INDICATORS[competency].map((indicator, index) => (\n            <a\n              href=\"#\"\n              className=\"dropdown-item\"\n              key={`${indicator + index}`}\n              onClick={handleSetIndicator}\n            >\n              {indicator}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IndicatorDropdown;\n","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nclass InlineEditableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = { html: `${props.initialValue}`, isEmpty: false };\n  }\n\n  handleChange = (e) => {\n    this.setState({ html: e.target.value, isEmpty: false });\n    this.props.onChange(e);\n  };\n\n  handleFocus = (e) => {\n    if (e.target.innerText === this.props.defaultValue) {\n      this.setState({ html: '', isEmpty: true });\n    }\n  };\n\n  handleBlur = (e) => {\n    if (e.target.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '') === '') {\n      this.setState({ html: `${this.props.initialValue}`, isEmpty: false });\n    }\n  };\n\n  render = () => {\n    const baseStyle = {\n      padding: '0.25em',\n      outline: 'none',\n      borderBottom: '1px rgba(0,0,0,0.3) solid',\n    };\n\n    const emptyStyle = {\n      display: 'inline-block',\n      minWidth: '4em',\n    };\n\n    const styles = this.state.isEmpty\n      ? { ...emptyStyle, ...baseStyle }\n      : baseStyle;\n\n    return (\n      <ContentEditable\n        innerRef={this.contentEditable}\n        html={this.state.html}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        style={styles}\n        tagName=\"span\"\n      />\n    );\n  };\n}\n\nexport default InlineEditableContent;\n","import React, { useState } from 'react';\nimport IndicatorDropdown from './IndicatorDropdown';\nimport InlineEditableContent from './InlineEditableContent';\n\nimport { CORE_COMPETENCIES } from '../constants';\n\nconst SupportingComment = ({\n  competency,\n  indicator,\n  example,\n  updateComment,\n  deleteComment,\n}) => {\n  const [showIndicatorDropdown, setShowIndicatorDropdown] = useState(\n    indicator === '' ? true : false\n  );\n\n  const handleChange = (e) => {\n    const newComment = {\n      competency: e.target.value,\n      indicator: '',\n      example: example,\n    };\n    updateComment(newComment);\n  };\n\n  const updateIndicator = (e) => {\n    if (showIndicatorDropdown === true) {\n      setShowIndicatorDropdown(false);\n    }\n\n    const value = e.target ? e.target.value : e;\n    const updatedComment = {\n      competency,\n      indicator: value,\n      example,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  const updateExample = (e) => {\n    const updatedComment = {\n      competency,\n      indicator,\n      example: e.target.value,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  return (\n    <div className=\"box\">\n      <button\n        className=\"delete is-danger\"\n        style={{ marginLeft: '99%', marginBottom: '.5rem' }}\n        onClick={() => deleteComment()}\n      ></button>\n      <div style={{ display: 'block' }}>\n        In the competency of{' '}\n        <div className=\"select is-small\">\n          <select defaultValue={competency} onChange={handleChange}>\n            <option value=\"Select\">Select One</option>\n            {CORE_COMPETENCIES.map((competency) => (\n              <option value={competency} key={competency}>\n                {competency}\n              </option>\n            ))}\n          </select>\n        </div>\n        , I{' '}\n        {showIndicatorDropdown ? (\n          <IndicatorDropdown\n            competency={competency}\n            indicator={indicator}\n            onUpdate={updateIndicator}\n          />\n        ) : (\n          <InlineEditableContent\n            initialValue={indicator}\n            defaultValue=\"[behavioral indicator]\"\n            onChange={updateIndicator}\n          />\n        )}{' '}\n        by{' '}\n        <InlineEditableContent\n          initialValue={example}\n          defaultValue=\"[specific example]\"\n          onChange={updateExample}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SupportingComment;\n","import React from 'react';\nimport JobFunction from './JobFunction';\nimport SupportingComment from './SupportingComment';\n\nconst JobFunctions = ({\n  jobFunctions,\n  dispatch,\n  addJobFunction,\n  addComment,\n  updateJobFunction,\n  updateComment,\n  deleteComment,\n}) => {\n  return (\n    <>\n      <h1 className=\"title\">\n        Job Functions\n        <button\n          className=\"button\"\n          style={{ marginLeft: '1em' }}\n          onClick={addJobFunction}\n        >\n          Add Job Function\n        </button>\n      </h1>\n\n      {jobFunctions.map((jobFunction) => (\n        <JobFunction\n          jobFunction={jobFunction}\n          key={jobFunction.id}\n          addComment={() => {\n            addComment(jobFunction.id);\n          }}\n          updateJobFunction={(e) => {\n            updateJobFunction(jobFunction.id, e);\n          }}\n        >\n          {jobFunction.comments.map((comment, commentIndex) => (\n            <SupportingComment\n              competency={comment.competency}\n              indicator={comment.indicator}\n              example={comment.example}\n              updateComment={(newComment) => {\n                updateComment(jobFunction.id, commentIndex, newComment);\n              }}\n              deleteComment={() => deleteComment(jobFunction, commentIndex)}\n              key={comment.competency + commentIndex}\n            />\n          ))}\n        </JobFunction>\n      ))}\n    </>\n  );\n};\n\nexport default JobFunctions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Achievements = ({ achievements, updateAchievements }) => {\n  return (\n    <>\n      <h1 className=\"title\">Achievements</h1>\n      <div className=\"box\">\n        <div className=\"field\">\n          <label className=\"label\">Achievements</label>\n          <div className=\"control\">\n            <textarea\n              name=\"achievement\"\n              className=\"textarea\"\n              placeholder=\"Address your goals from last year\"\n              value={achievements}\n              onChange={updateAchievements}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nAchievements.propTypes = {\n  achievements: PropTypes.string,\n  updateAchievements: PropTypes.func,\n};\n\nexport default Achievements;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Goal = ({ title, value, handleGoalChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label className=\"label\">{title}</label>\n      <div className=\"control\">\n        <textarea\n          name=\"goals\"\n          className=\"textarea\"\n          placeholder=\"Plan out your future goals\"\n          value={value}\n          onChange={handleGoalChange}\n        ></textarea>\n      </div>\n    </div>\n  </div>\n);\n\nGoal.propTypes = {\n  title: PropTypes.string,\n  value: PropTypes.string,\n  handleGoalChange: PropTypes.func,\n};\n\nexport default Goal;\n","import React from 'react';\nimport Goal from './Goal';\nimport PropTypes from 'prop-types';\n\nconst Goals = ({ goals, addGoal, updateGoal }) => {\n  return (\n    <>\n      <h1 className=\"title\">\n        Goals\n        <button\n          className=\"button\"\n          style={{ marginLeft: '1em' }}\n          onClick={addGoal}\n        >\n          Add Goal\n        </button>\n      </h1>\n      {goals.map((goal, index) => (\n        <Goal\n          key={goal.title}\n          title={goal.title}\n          value={goal.value}\n          handleGoalChange={(e) => updateGoal(e, index)}\n        />\n      ))}\n    </>\n  );\n};\n\nGoals.propTypes = {\n  goals: PropTypes.arrayOf(PropTypes.object),\n  addGoal: PropTypes.func,\n  updateGoal: PropTypes.func,\n};\n\nexport default Goals;\n","export default function jobFunctionReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_JOB_FUNCTION':\n      return [\n        ...state,\n        {\n          id: `job-function-${Math.random().toString(16).slice(2)}`,\n          description: '',\n          percentage: '',\n          comments: [\n            {\n              competency: '',\n              indicator: '',\n              example: '[specific example]',\n            },\n          ],\n        },\n      ];\n    case 'UPDATE_JOB_FUNCTION':\n      const { name, value } = action.payload.event.target;\n\n      return state.map((jobFunction) =>\n        jobFunction.id === action.payload.id\n          ? {\n              ...jobFunction,\n              [name]: value,\n            }\n          : jobFunction\n      );\n    case 'ADD_COMMENT':\n      return state.map((jobFunction) => {\n        if (jobFunction.id === action.payload.id) {\n          const newComments = [\n            ...jobFunction.comments,\n            {\n              competency: '',\n              indicator: '',\n              example: '[specific example]',\n            },\n          ];\n\n          return { ...jobFunction, comments: newComments };\n        } else {\n          return jobFunction;\n        }\n      });\n    case 'UPDATE_COMMENT': {\n      const { jobFunctionId, commentIndex, newComment } = action.payload;\n      const jobFunction = state.find((jf) => jf.id === jobFunctionId);\n\n      const updatedComments = jobFunction.comments.map((comment, idx) => {\n        if (idx === commentIndex) {\n          return newComment;\n        } else {\n          return comment;\n        }\n      });\n\n      const newJobFunction = { ...jobFunction, comments: updatedComments };\n\n      return state.map((jobFunction) => {\n        if (jobFunction.id === jobFunctionId) {\n          return newJobFunction;\n        } else {\n          return jobFunction;\n        }\n      });\n    }\n    case 'DELETE_COMMENT': {\n      const { jobFunction, commentIndex } = action.payload;\n      const filteredComments = jobFunction.comments.filter(\n        (_, index) => index !== commentIndex\n      );\n\n      const updatedJobFunction = { ...jobFunction, comments: filteredComments };\n\n      return state.map((jobFunction) =>\n        jobFunction.id === updatedJobFunction.id\n          ? updatedJobFunction\n          : jobFunction\n      );\n    }\n    case 'RESET_JOB_FUNCTIONS': {\n      return [];\n    }\n    default:\n      throw new Error();\n  }\n}\n","import React, { createContext, useEffect, useReducer } from 'react';\n\nexport const AppContext = createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SELECT_TAB':\n      return { ...state, activeTab: action.payload.tab };\n    case 'RESET_ACTIVE_TAB':\n      return { activeTab: 'Job Functions' };\n    default:\n      return state;\n  }\n}\n\nconst localData = localStorage.getItem('performeter-app-state');\nconst initialAppState = localData\n  ? JSON.parse(localData)\n  : {\n      activeTab: 'Job Functions',\n    };\n\nconst AppContextProvider = (props) => {\n  const [appState, appDispatch] = useReducer(reducer, initialAppState);\n\n  useEffect(() => {\n    localStorage.setItem('performeter-app-state', JSON.stringify(appState));\n  }, [appState]);\n\n  return (\n    <AppContext.Provider value={{ appState, appDispatch }}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n","import './App.css';\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Header from './components/Header';\nimport Tabs from './components/Tabs';\nimport CompetencyCounter from './components/CompetencyCounter';\nimport JobFunctions from './components/JobFunctions';\nimport Achievements from './components/Achievements';\nimport Goals from './components/Goals';\n\nimport jobFunctionReducer from './reducers/jobFunctionReducer';\nimport { AppContext } from './contexts/AppContext';\n\nfunction App() {\n  const initialState =\n    JSON.parse(window.localStorage.getItem('performeter')) || {};\n\n  const { appState, appDispatch } = useContext(AppContext);\n\n  const [state, dispatch] = useReducer(\n    jobFunctionReducer,\n    initialState.jobFunctions || []\n  );\n\n  const [achievements, setAchievements] = useState(\n    initialState.achievements || ''\n  );\n  const [goals, setGoals] = useState(initialState.goals || []);\n\n  useEffect(() => {\n    const data = {\n      jobFunctions: state,\n      achievements,\n      goals,\n    };\n    window.localStorage.setItem('performeter', JSON.stringify(data));\n  }, [state, achievements, goals]); // only activate when these values change\n\n  // Achievements Handlers\n  const updateAchievements = (event) => {\n    setAchievements(event.target.value);\n  };\n\n  // Goals Handlers\n  const addGoal = () => {\n    const newGoalIndex = goals.length + 1;\n    const newGoal = {\n      title: `Goal ${newGoalIndex}`,\n      value: '',\n    };\n    setGoals((prevState) => [...prevState, newGoal]);\n  };\n\n  const updateGoal = (event, index) => {\n    const updatedGoals = goals.map((goal, goalIndex) => {\n      if (goalIndex === index) {\n        return { ...goal, value: event.target.value };\n      }\n\n      return goal;\n    });\n\n    setGoals(() => updatedGoals);\n  };\n\n  const updateNav = (e) => {\n    appDispatch({ type: 'SELECT_TAB', payload: { tab: e.target.innerText } });\n  };\n\n  const resetData = () => {\n    dispatch({ type: 'RESET_JOB_FUNCTIONS' });\n    setAchievements('');\n    setGoals([]);\n    appDispatch({ type: 'RESET_ACTIVE_TAB' });\n  };\n\n  const allComments = state.map((jobFunction) => jobFunction.comments).flat();\n\n  return (\n    <div className=\"App\">\n      <Header\n        state={state}\n        achievements={achievements}\n        goals={goals}\n        resetData={resetData}\n      />\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n            <CompetencyCounter comments={allComments} />\n          </div>\n          <div className=\"column is-three-quarters\">\n            <Tabs activeTab={appState.activeTab} updateNav={updateNav} />\n\n            {\n              {\n                'Job Functions': (\n                  <JobFunctions\n                    jobFunctions={state}\n                    dispatch={dispatch}\n                    addJobFunction={() =>\n                      dispatch({ type: 'ADD_JOB_FUNCTION' })\n                    }\n                    updateJobFunction={(id, event) =>\n                      dispatch({\n                        type: 'UPDATE_JOB_FUNCTION',\n                        payload: { id, event },\n                      })\n                    }\n                    addComment={(id) =>\n                      dispatch({ type: 'ADD_COMMENT', payload: { id } })\n                    }\n                    updateComment={(\n                      jobFunctionId,\n                      commentIndex,\n                      newComment\n                    ) => {\n                      dispatch({\n                        type: 'UPDATE_COMMENT',\n                        payload: { jobFunctionId, commentIndex, newComment },\n                      });\n                    }}\n                    deleteComment={(jobFunction, commentIndex) =>\n                      dispatch({\n                        type: 'DELETE_COMMENT',\n                        payload: { jobFunction, commentIndex },\n                      })\n                    }\n                  />\n                ),\n                Achievements: (\n                  <Achievements\n                    achievements={achievements}\n                    updateAchievements={updateAchievements}\n                  />\n                ),\n                'Future Goals': (\n                  <Goals\n                    goals={goals}\n                    addGoal={addGoal}\n                    updateGoal={updateGoal}\n                  />\n                ),\n              }[appState.activeTab]\n            }\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport AppContextProvider from './contexts/AppContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContextProvider>\n      <App />\n    </AppContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}