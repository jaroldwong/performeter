{"version":3,"sources":["components/Header.js","components/CompetencyCounter.js","components/JobFunctions.js","components/InlineEditableContent.js","components/SupportingComment.js","App.js","index.js"],"names":["Header","props","className","href","onClick","reset","export","CompetencyCounter","comments","competencyCount","Communication","Leadership","Teamwork","reduce","acc","current","Object","keys","includes","competency","map","key","index","style","padding","JobFunctions","React","useState","percent","state","setState","value","length","max","parseInt","onChange","e","target","id","placeholder","addComment","children","InlineEditableContent","handleChange","html","isEmpty","handleFocus","innerText","defaultValue","handleBlur","replace","initialValue","render","baseStyle","outline","borderBottom","styles","display","minWidth","innerRef","contentEditable","onFocus","onBlur","tagName","createRef","Component","SupportingComment","indicator","example","updateComment","deleteComment","marginLeft","marginBottom","newComment","updatedComment","App","JSON","parse","window","localStorage","getItem","jobFunctions","setJobFunctions","useEffect","setItem","stringify","allComments","jobFunction","flat","incrementId","description","percentage","jobFunctionId","newJobFunctions","newComments","comment","commentIndex","find","jf","updatedComments","idx","newJobFunction","filteredComments","filter","_","updatedJobFunction","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eb49549.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => (\n  <nav className=\"navbar is-light\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"/\">\n        <h1 className=\"title is-4\">PerforMeter</h1>\n      </a>\n    </div>\n\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <button className=\"button is-danger\" onClick={props.reset}>\n              Reset\n            </button>\n            <button className=\"button\" onClick={props.export}>\n              Export as Plain Text\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst CompetencyCounter = ({ comments }) => {\n  let competencyCount = {\n    Communication: 0,\n    'Decision Making': 0,\n    'Diversity, Equity, Inclusion': 0,\n    'Health and Safety': 0,\n    Leadership: 0,\n    'Problem Solving and Innovation': 0,\n    'Quality Improvement': 0,\n    'Service Focus': 0,\n    'Stewardship and Managing Resources': 0,\n    'Strategic Planning': 0,\n    Teamwork: 0,\n    'Managing People (Supervisors)': 0,\n  };\n\n  competencyCount = comments.reduce((acc, current) => {\n    if (Object.keys(competencyCount).includes(current.competency)) {\n      acc[current.competency] += 1;\n    }\n    return acc;\n  }, competencyCount);\n\n  return (\n    <div className=\"fixed\">\n      <h1 className=\"title is-6\">Core Competencies</h1>\n\n      <ul className=\"unstyled-list\">\n        {Object.keys(competencyCount).map((key, index) => (\n          <li key={`key + ${index}`} style={{ padding: '3px' }}>\n            <div className=\"tags has-addons\">\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {competencyCount[key]}\n              </span>\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {key}\n              </span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CompetencyCounter;\n","import React from 'react';\n\nconst JobFunctions = (props) => {\n  const percentValues = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10];\n\n  const [state, setState] = React.useState({\n    percent: '',\n  });\n\n  return (\n    <div>\n      <div className=\"box\">\n        <h2 className=\"subtitle\">Job Function</h2>\n        <progress\n          className=\"progress is-success\"\n          value={state.percent ? props.comments.length : 0}\n          max={state.percent ? parseInt(state.percent) / 10 : 0}\n        >\n          {state.percent}\n        </progress>\n        <div className=\"field\">\n          <label className=\"label\">Percentage</label>\n          <div className=\"control\">\n            <div className=\"select is-small\">\n              <select\n                onChange={(e) => {\n                  setState({ percent: e.target.value });\n                }}\n              >\n                <option value=\"\">Select</option>\n                {percentValues.map((value) => (\n                  <option\n                    value={value}\n                    key={`${props.id}-${value}`}\n                  >{`${value}%`}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <div className=\"control\">\n            <textarea\n              className=\"textarea\"\n              placeholder=\"Copy and paste job function here\"\n            ></textarea>\n          </div>\n        </div>\n        <button className=\"button\" onClick={props.addComment}>\n          Add Supporting Comment\n        </button>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default JobFunctions;\n","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nclass InlineEditableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = { html: `${props.initialValue}`, isEmpty: false };\n  }\n\n  handleChange = (e) => {\n    this.setState({ html: e.target.value, isEmpty: false });\n    this.props.onChange(e);\n  };\n\n  handleFocus = (e) => {\n    if (e.target.innerText === this.props.defaultValue) {\n      this.setState({ html: '', isEmpty: true });\n    }\n  };\n\n  handleBlur = (e) => {\n    if (e.target.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '') === '') {\n      this.setState({ html: `${this.props.initialValue}`, isEmpty: false });\n    }\n  };\n\n  render = () => {\n    const baseStyle = {\n      padding: '0.25em',\n      outline: 'none',\n      borderBottom: '1px rgba(0,0,0,0.3) solid',\n    };\n\n    const emptyStyle = {\n      display: 'inline-block',\n      minWidth: '4em',\n    };\n\n    const styles = this.state.isEmpty\n      ? { ...emptyStyle, ...baseStyle }\n      : baseStyle;\n\n    return (\n      <ContentEditable\n        innerRef={this.contentEditable}\n        html={this.state.html}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        style={styles}\n        tagName=\"span\"\n      />\n    );\n  };\n}\n\nexport default InlineEditableContent;\n","import React from 'react';\nimport InlineEditableContent from './InlineEditableContent';\n\nconst SupportingComment = ({\n  competency,\n  indicator,\n  example,\n  updateComment,\n  deleteComment,\n}) => {\n  const coreCompetencies = [\n    'Communication',\n    'Decision Making',\n    'Diversity, Equity, Inclusion',\n    'Health and Safety',\n    'Leadership',\n    'Problem Solving and Innovation',\n    'Quality Improvement',\n    'Service Focus',\n    'Stewardship and Managing Resources',\n    'Strategic Planning',\n    'Teamwork',\n    'Managing People (Supervisors)',\n  ];\n\n  const handleChange = (e) => {\n    const newComment = {\n      competency: e.target.value,\n      indicator: indicator,\n      example: example,\n    };\n    updateComment(newComment);\n  };\n\n  const updateIndicator = (e) => {\n    const updatedComment = {\n      competency,\n      indicator: e.target.value,\n      example,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  const updateExample = (e) => {\n    const updatedComment = {\n      competency,\n      indicator,\n      example: e.target.value,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  return (\n    <div className=\"box\">\n      <button\n        className=\"delete is-danger\"\n        style={{ marginLeft: '99%', marginBottom: '.5rem' }}\n        onClick={() => deleteComment()}\n      ></button>\n      <div style={{ display: 'block' }}>\n        In the competency of{' '}\n        <div className=\"select is-small\">\n          <select defaultValue={competency} onChange={handleChange}>\n            <option value=\"Select\">Select One</option>\n            {coreCompetencies.map((competency) => (\n              <option value={competency} key={competency}>\n                {competency}\n              </option>\n            ))}\n          </select>\n        </div>\n        , I{' '}\n        <InlineEditableContent\n          initialValue={indicator}\n          defaultValue=\"[behavioral indicator]\"\n          onChange={updateIndicator}\n        />\n        by{' '}\n        <InlineEditableContent\n          initialValue={example}\n          defaultValue=\"[specific example]\"\n          onChange={updateExample}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SupportingComment;\n","import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport CompetencyCounter from './components/CompetencyCounter';\nimport JobFunctions from './components/JobFunctions';\nimport SupportingComment from './components/SupportingComment';\n\nfunction App() {\n  // use function to only run once per render\n  const initialState = () =>\n    JSON.parse(window.localStorage.getItem('performeter')) || [];\n\n  const [jobFunctions, setJobFunctions] = useState(initialState);\n\n  useEffect(() => {\n    window.localStorage.setItem('performeter', JSON.stringify(jobFunctions));\n  }, [jobFunctions]); // only activate when value changes\n\n  const addComment = (jobFunctionId) => {\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        const newComments = [\n          ...jobFunction.comments,\n          {\n            competency: '',\n            indicator: '[behavioral indicator]',\n            example: '[specific example]',\n          },\n        ];\n\n        return { ...jobFunction, comments: newComments };\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const updateComment = (jobFunctionId, commentIndex, newComment) => {\n    const jobFunction = jobFunctions.find((jf) => jf.id === jobFunctionId);\n\n    const updatedComments = jobFunction.comments.map((comment, idx) => {\n      if (idx === commentIndex) {\n        return newComment;\n      } else {\n        return comment;\n      }\n    });\n\n    const newJobFunction = { ...jobFunction, comments: updatedComments };\n\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        return newJobFunction;\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const deleteComment = (jobFunction, commentIndex) => {\n    const filteredComments = jobFunction.comments.filter(\n      (_, index) => index !== commentIndex\n    );\n\n    const updatedJobFunction = { ...jobFunction, comments: filteredComments };\n\n    const newJobFunctions = jobFunctions.map((jobFunction) =>\n      jobFunction.id === updatedJobFunction.id\n        ? updatedJobFunction\n        : jobFunction\n    );\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const handleAddJobFunction = () => {\n    const incrementId = jobFunctions.length + 1;\n\n    setJobFunctions([\n      ...jobFunctions,\n      {\n        id: `job-function-${incrementId}`,\n        description: 'job function description goes here',\n        percentage: '',\n        comments: [\n          {\n            competency: '',\n            indicator: '[behavioral indicator]',\n            example: '[specific example]',\n          },\n        ],\n      },\n    ]);\n  };\n\n  const reset = () => {\n    setJobFunctions([]);\n  };\n\n  const allComments = jobFunctions\n    .map((jobFunction) => jobFunction.comments)\n    .flat();\n\n  return (\n    <div className=\"App\">\n      <Header reset={reset} />\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n            <CompetencyCounter comments={allComments} />\n          </div>\n          <div className=\"column is-three-quarters\">\n            <h1 className=\"title\">\n              Job Functions\n              <button\n                className=\"button\"\n                style={{ marginLeft: '1em' }}\n                onClick={handleAddJobFunction}\n              >\n                Add Job Function\n              </button>\n            </h1>\n\n            {jobFunctions.map((jobFunction) => (\n              <JobFunctions\n                id={jobFunction.id}\n                comments={jobFunction.comments}\n                key={jobFunction.id}\n                addComment={() => {\n                  addComment(jobFunction.id);\n                }}\n              >\n                {jobFunction.comments.map((comment, commentIndex) => (\n                  <SupportingComment\n                    competency={comment.competency}\n                    indicator={comment.indicator}\n                    example={comment.example}\n                    updateComment={(newComment) => {\n                      updateComment(jobFunction.id, commentIndex, newComment);\n                    }}\n                    deleteComment={() =>\n                      deleteComment(jobFunction, commentIndex)\n                    }\n                    key={comment.competency + commentIndex}\n                  />\n                ))}\n              </JobFunctions>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}