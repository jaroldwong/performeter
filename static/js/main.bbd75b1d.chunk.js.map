{"version":3,"sources":["components/Header.js","components/Tabs.js","components/CompetencyCounter.js","components/JobFunction.js","components/InlineEditableContent.js","components/SupportingComment.js","App.js","index.js"],"names":["Header","props","className","href","onClick","reset","state","string","map","item","percentage","description","comments","reduce","acc","curr","concat","competency","indicator","example","window","open","document","write","exportText","Tabs","activeNav","handleNav","CompetencyCounter","competencyCount","Communication","Leadership","Teamwork","current","Object","keys","includes","key","index","style","padding","JobFunction","jobFunction","id","value","length","max","parseInt","name","onChange","updateJobFunction","placeholder","addComment","children","InlineEditableContent","handleChange","e","setState","html","target","isEmpty","handleFocus","innerText","defaultValue","handleBlur","replace","initialValue","render","baseStyle","outline","borderBottom","styles","display","minWidth","innerRef","contentEditable","onFocus","onBlur","tagName","React","createRef","Component","SupportingComment","updateComment","deleteComment","marginLeft","marginBottom","newComment","updatedComment","App","useState","JSON","parse","localStorage","getItem","jobFunctions","setJobFunctions","setActiveNav","useEffect","setItem","stringify","allComments","flat","Math","random","toString","slice","jobFunctionId","newJobFunctions","newComments","updatedJobFunctions","comment","commentIndex","find","jf","updatedComments","idx","newJobFunction","filteredComments","filter","_","updatedJobFunction","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bbd75b1d.chunk.js","sourcesContent":["import React from 'react';\n\nconst exportText = (state) => {\n  const text = state.map((item) => {\n    const heading = `<p>${item.percentage} - ${item.description} </p>`;\n\n    const comments = item.comments.reduce((acc, curr) => {\n      return acc.concat(\n        `In the competency of ${curr.competency}, I ${curr.indicator} by ${curr.example}<br><br>`\n      );\n    }, '');\n\n    return heading + comments;\n  });\n\n  const string = text.reduce((acc, curr) => {\n    return acc.concat(curr);\n  }, '');\n\n  const wnd = window.open('about:blank', '', '_blank');\n  wnd.document.write(string);\n};\n\nconst Header = (props) => (\n  <nav className=\"navbar is-light\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"/\">\n        <h1 className=\"title is-4\">PerforMeter</h1>\n      </a>\n    </div>\n\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <button className=\"button is-danger\" onClick={props.reset}>\n              Reset\n            </button>\n            <button className=\"button\" onClick={() => exportText(props.state)}>\n              Export as Text\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Tabs = ({ activeNav, handleNav }) => {\n  return (\n    <div className=\"tabs\">\n      <ul>\n        <li className={activeNav === 'Job Functions' ? 'is-active' : null}>\n          <a href=\"#JobFunctions\" onClick={handleNav}>\n            Job Functions\n          </a>\n        </li>\n        <li className={activeNav === 'Achievements' ? 'is-active' : null}>\n          <a href=\"#Achievements\" onClick={handleNav}>\n            Achievements\n          </a>\n        </li>\n        <li className={activeNav === 'Future Goals' ? 'is-active' : null}>\n          <a href=\"#Goals\" onClick={handleNav}>\n            Future Goals\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default Tabs;\n","import React from 'react';\n\nconst CompetencyCounter = ({ comments }) => {\n  let competencyCount = {\n    Communication: 0,\n    'Decision Making': 0,\n    'Diversity, Equity, Inclusion': 0,\n    'Health and Safety': 0,\n    Leadership: 0,\n    'Problem Solving and Innovation': 0,\n    'Quality Improvement': 0,\n    'Service Focus': 0,\n    'Stewardship and Managing Resources': 0,\n    'Strategic Planning': 0,\n    Teamwork: 0,\n    'Managing People (Supervisors)': 0,\n  };\n\n  competencyCount = comments.reduce((acc, current) => {\n    if (Object.keys(competencyCount).includes(current.competency)) {\n      acc[current.competency] += 1;\n    }\n    return acc;\n  }, competencyCount);\n\n  return (\n    <div className=\"fixed\">\n      <h1 className=\"title is-6\">Core Competencies</h1>\n\n      <ul className=\"unstyled-list\">\n        {Object.keys(competencyCount).map((key, index) => (\n          <li key={`key + ${index}`} style={{ padding: '3px' }}>\n            <div className=\"tags has-addons\">\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {competencyCount[key]}\n              </span>\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {key}\n              </span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CompetencyCounter;\n","import React from 'react';\n\nconst JobFunction = (props) => {\n  const percentValues = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10];\n  const { comments, description, id, percentage } = props.jobFunction;\n\n  return (\n    <div>\n      <div className=\"box\">\n        <h2 className=\"subtitle\">Job Function</h2>\n        <progress\n          className=\"progress is-success\"\n          value={percentage ? comments.length : 0}\n          max={percentage ? parseInt(percentage) / 10 : 0}\n        >\n          {percentage}\n        </progress>\n        <div className=\"field\">\n          <label className=\"label\">Percentage</label>\n          <div className=\"control\">\n            <div className=\"select is-small\">\n              <select\n                name=\"percentage\"\n                value={percentage}\n                onChange={props.updateJobFunction}\n              >\n                <option value=\"\">Select</option>\n                {percentValues.map((value) => (\n                  <option\n                    value={`${value}%`}\n                    key={`${id}-${value}`}\n                  >{`${value}%`}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <div className=\"control\">\n            <textarea\n              name=\"description\"\n              className=\"textarea\"\n              placeholder=\"Copy and paste job function here\"\n              value={description}\n              onChange={props.updateJobFunction}\n            ></textarea>\n          </div>\n        </div>\n        <button className=\"button\" onClick={props.addComment}>\n          Add Supporting Comment\n        </button>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default JobFunction;\n","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nclass InlineEditableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = { html: `${props.initialValue}`, isEmpty: false };\n  }\n\n  handleChange = (e) => {\n    this.setState({ html: e.target.value, isEmpty: false });\n    this.props.onChange(e);\n  };\n\n  handleFocus = (e) => {\n    if (e.target.innerText === this.props.defaultValue) {\n      this.setState({ html: '', isEmpty: true });\n    }\n  };\n\n  handleBlur = (e) => {\n    if (e.target.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '') === '') {\n      this.setState({ html: `${this.props.initialValue}`, isEmpty: false });\n    }\n  };\n\n  render = () => {\n    const baseStyle = {\n      padding: '0.25em',\n      outline: 'none',\n      borderBottom: '1px rgba(0,0,0,0.3) solid',\n    };\n\n    const emptyStyle = {\n      display: 'inline-block',\n      minWidth: '4em',\n    };\n\n    const styles = this.state.isEmpty\n      ? { ...emptyStyle, ...baseStyle }\n      : baseStyle;\n\n    return (\n      <ContentEditable\n        innerRef={this.contentEditable}\n        html={this.state.html}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        style={styles}\n        tagName=\"span\"\n      />\n    );\n  };\n}\n\nexport default InlineEditableContent;\n","import React from 'react';\nimport InlineEditableContent from './InlineEditableContent';\n\nconst SupportingComment = ({\n  competency,\n  indicator,\n  example,\n  updateComment,\n  deleteComment,\n}) => {\n  const coreCompetencies = [\n    'Communication',\n    'Decision Making',\n    'Diversity, Equity, Inclusion',\n    'Health and Safety',\n    'Leadership',\n    'Problem Solving and Innovation',\n    'Quality Improvement',\n    'Service Focus',\n    'Stewardship and Managing Resources',\n    'Strategic Planning',\n    'Teamwork',\n    'Managing People (Supervisors)',\n  ];\n\n  const handleChange = (e) => {\n    const newComment = {\n      competency: e.target.value,\n      indicator: indicator,\n      example: example,\n    };\n    updateComment(newComment);\n  };\n\n  const updateIndicator = (e) => {\n    const updatedComment = {\n      competency,\n      indicator: e.target.value,\n      example,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  const updateExample = (e) => {\n    const updatedComment = {\n      competency,\n      indicator,\n      example: e.target.value,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  return (\n    <div className=\"box\">\n      <button\n        className=\"delete is-danger\"\n        style={{ marginLeft: '99%', marginBottom: '.5rem' }}\n        onClick={() => deleteComment()}\n      ></button>\n      <div style={{ display: 'block' }}>\n        In the competency of{' '}\n        <div className=\"select is-small\">\n          <select defaultValue={competency} onChange={handleChange}>\n            <option value=\"Select\">Select One</option>\n            {coreCompetencies.map((competency) => (\n              <option value={competency} key={competency}>\n                {competency}\n              </option>\n            ))}\n          </select>\n        </div>\n        , I{' '}\n        <InlineEditableContent\n          initialValue={indicator}\n          defaultValue=\"[behavioral indicator]\"\n          onChange={updateIndicator}\n        />\n        by{' '}\n        <InlineEditableContent\n          initialValue={example}\n          defaultValue=\"[specific example]\"\n          onChange={updateExample}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SupportingComment;\n","import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tabs from './components/Tabs';\nimport CompetencyCounter from './components/CompetencyCounter';\nimport JobFunction from './components/JobFunction';\nimport SupportingComment from './components/SupportingComment';\n\nfunction App() {\n  // use function to only run once per render\n  const initialState = () =>\n    JSON.parse(window.localStorage.getItem('performeter')) || [];\n\n  const [jobFunctions, setJobFunctions] = useState(initialState);\n  const [activeNav, setActiveNav] = useState('Job Functions');\n\n  useEffect(() => {\n    window.localStorage.setItem('performeter', JSON.stringify(jobFunctions));\n  }, [jobFunctions]); // only activate when value changes\n\n  const addComment = (jobFunctionId) => {\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        const newComments = [\n          ...jobFunction.comments,\n          {\n            competency: '',\n            indicator: '[behavioral indicator]',\n            example: '[specific example]',\n          },\n        ];\n\n        return { ...jobFunction, comments: newComments };\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const updateComment = (jobFunctionId, commentIndex, newComment) => {\n    const jobFunction = jobFunctions.find((jf) => jf.id === jobFunctionId);\n\n    const updatedComments = jobFunction.comments.map((comment, idx) => {\n      if (idx === commentIndex) {\n        return newComment;\n      } else {\n        return comment;\n      }\n    });\n\n    const newJobFunction = { ...jobFunction, comments: updatedComments };\n\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        return newJobFunction;\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const deleteComment = (jobFunction, commentIndex) => {\n    const filteredComments = jobFunction.comments.filter(\n      (_, index) => index !== commentIndex\n    );\n\n    const updatedJobFunction = { ...jobFunction, comments: filteredComments };\n\n    const newJobFunctions = jobFunctions.map((jobFunction) =>\n      jobFunction.id === updatedJobFunction.id\n        ? updatedJobFunction\n        : jobFunction\n    );\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const handleAddJobFunction = () => {\n    setJobFunctions([\n      ...jobFunctions,\n      {\n        id: `job-function-${Math.random().toString(16).slice(2)}`,\n        description: 'job function description goes here',\n        percentage: '',\n        comments: [\n          {\n            competency: '',\n            indicator: '[behavioral indicator]',\n            example: '[specific example]',\n          },\n        ],\n      },\n    ]);\n  };\n\n  const updateJobFunction = (id, e) => {\n    const updatedJobFunctions = jobFunctions.map((jobFunction) =>\n      jobFunction.id === id\n        ? { ...jobFunction, [e.target.name]: e.target.value }\n        : jobFunction\n    );\n\n    setJobFunctions(updatedJobFunctions);\n  };\n\n  const reset = () => {\n    setJobFunctions([]);\n  };\n\n  const allComments = jobFunctions\n    .map((jobFunction) => jobFunction.comments)\n    .flat();\n\n  return (\n    <div className=\"App\">\n      <Header state={jobFunctions} reset={reset} />\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n            <CompetencyCounter comments={allComments} />\n          </div>\n          <div className=\"column is-three-quarters\">\n            <Tabs\n              activeNav={activeNav}\n              handleNav={(e) => {\n                setActiveNav(e.target.innerText);\n              }}\n            />\n            <h1 className=\"title\">\n              Job Functions\n              <button\n                className=\"button\"\n                style={{ marginLeft: '1em' }}\n                onClick={handleAddJobFunction}\n              >\n                Add Job Function\n              </button>\n            </h1>\n\n            {jobFunctions.map((jobFunction) => (\n              <JobFunction\n                jobFunction={jobFunction}\n                key={jobFunction.id}\n                addComment={() => {\n                  addComment(jobFunction.id);\n                }}\n                updateJobFunction={(e) => {\n                  updateJobFunction(jobFunction.id, e);\n                }}\n              >\n                {jobFunction.comments.map((comment, commentIndex) => (\n                  <SupportingComment\n                    competency={comment.competency}\n                    indicator={comment.indicator}\n                    example={comment.example}\n                    updateComment={(newComment) => {\n                      updateComment(jobFunction.id, commentIndex, newComment);\n                    }}\n                    deleteComment={() =>\n                      deleteComment(jobFunction, commentIndex)\n                    }\n                    key={comment.competency + commentIndex}\n                  />\n                ))}\n              </JobFunction>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}