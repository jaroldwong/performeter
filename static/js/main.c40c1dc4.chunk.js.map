{"version":3,"sources":["components/Header.js","components/CompetencyCounter.js","components/JobFunctions.js","components/InlineEditableContent.js","components/SupportingComment.js","App.js","index.js"],"names":["Header","props","className","href","onClick","export","CompetencyCounter","competencyCount","Communication","Leadership","Teamwork","comments","reduce","acc","current","Object","keys","includes","competency","map","key","index","style","padding","JobFunctions","React","useState","percent","state","setState","value","isNaN","parseInt","length","max","onChange","e","target","placeholder","addComment","children","InlineEditableContent","handleChange","html","handleFocus","innerText","initialValue","handleBlur","replace","render","innerRef","contentEditable","onFocus","onBlur","display","minWidth","outline","borderBottom","createRef","Component","SupportingComment","defaultValue","newComment","indicator","example","updateComment","App","id","description","percentage","jobFunctions","setJobFunctions","allComments","jobFunction","flat","marginLeft","incrementId","jobFunctionId","newJobFunctions","newComments","comment","commentIndex","find","jf","updatedComments","idx","newJobFunction","ReactDOM","StrictMode","document","getElementById"],"mappings":"kPAsBeA,EApBA,SAACC,GAAD,OACb,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,mBAAGA,UAAU,cAAcC,KAAK,IAAhC,SACE,oBAAID,UAAU,aAAd,6BAIJ,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,cAAf,SACE,wBAAQA,UAAU,SAASE,QAASH,EAAMI,OAA1C,4CC0CKC,EArDW,SAACL,GACzB,IAAIM,EAAkB,CACpBC,cAAe,EACf,kBAAmB,EACnB,+BAAgC,EAChC,oBAAqB,EACrBC,WAAY,EACZ,iCAAkC,EAClC,sBAAuB,EACvB,gBAAiB,EACjB,qCAAsC,EACtC,qBAAsB,EACtBC,SAAU,EACV,gCAAiC,GAUnC,OAPAH,EAAkBN,EAAMU,SAASC,QAAO,SAACC,EAAKC,GAI5C,OAHIC,OAAOC,KAAKT,GAAiBU,SAASH,EAAQI,cAChDL,EAAIC,EAAQI,aAAe,GAEtBL,IACNN,GAGD,sBAAKL,UAAU,QAAf,UACE,oBAAIA,UAAU,aAAd,+BAEA,oBAAIA,UAAU,gBAAd,SACGa,OAAOC,KAAKT,GAAiBY,KAAI,SAACC,EAAKC,GAAN,OAChC,oBAA2BC,MAAO,CAAEC,QAAS,OAA7C,SACE,sBAAKrB,UAAU,kBAAf,UACE,sBACEA,UACE,QAAUK,EAAgBa,GAAO,EAAI,aAAe,IAFxD,SAKGb,EAAgBa,KAEnB,sBACElB,UACE,QAAUK,EAAgBa,GAAO,EAAI,aAAe,IAFxD,SAKGA,QAdP,gBAAkBC,aCwBbG,EArDM,SAACvB,GACpB,IAEA,EAA0BwB,IAAMC,SAAS,CACvCC,QAAS,KADX,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OACE,8BACE,sBAAK3B,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,0BACA,0BACEA,UAAU,sBACV4B,MAAOC,MAAMC,SAASJ,EAAMD,UAAY,EAAI1B,EAAMU,SAASsB,OAC3DC,IAAKF,SAASJ,EAAMD,SAAW,GAHjC,gBAOA,sBAAKzB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,wBACA,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,yBACEiC,SAAU,SAACC,GACTP,EAAS,CAAEF,QAASS,EAAEC,OAAOP,SAFjC,UAKE,4CA1BQ,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IA2B/BX,KAAI,SAACW,GAAD,OACjB,2CAAwBA,EAAxB,MAAaA,gBAMvB,sBAAK5B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,yBACA,qBAAKA,UAAU,UAAf,SACE,0BACEA,UAAU,WACVoC,YAAY,0CAIlB,wBAAQpC,UAAU,SAASE,QAASH,EAAMsC,WAA1C,oCAGCtC,EAAMuC,e,wCCHAC,E,kDA1Cb,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAKRyC,aAAe,SAACN,GACd,EAAKP,SAAS,CAAEc,KAAMP,EAAEC,OAAOP,SAPd,EAUnBc,YAAc,SAACR,GACTA,EAAEC,OAAOQ,YAAc,EAAK5C,MAAM6C,cACpC,EAAKjB,SAAS,CAAEc,KAAM,mBAZP,EAgBnBI,WAAa,SAACX,GAC6C,KAArDA,EAAEC,OAAOQ,UAAUG,QAAQ,iBAAkB,KAC/C,EAAKnB,SAAS,CAAEc,KAAK,SAAD,OAAW,EAAK1C,MAAM6C,aAAtB,cAlBL,EAsBnBG,OAAS,WACP,OACE,cAAC,IAAD,CACEC,SAAU,EAAKC,gBACfR,KAAM,EAAKf,MAAMe,KACjBR,SAAU,EAAKO,aACfU,QAAS,EAAKR,YACdS,OAAQ,EAAKN,WACbzB,MAAO,CACLgC,QAAS,SACTC,SAAU,MACVhC,QAAS,SACTiC,QAAS,OACTC,aAAc,gCAjCpB,EAAKN,gBAAkB1B,IAAMiC,YAC7B,EAAK9B,MAAQ,CAAEe,KAAK,SAAD,OAAW1C,EAAM6C,aAAjB,YAHF,E,UADerB,IAAMkC,WC8C3BC,EA9CW,SAAC3D,GAyBzB,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKoB,MAAO,CAAEgC,QAAS,SAAvB,iCACuB,IACrB,qBAAKpD,UAAU,kBAAf,SACE,yBAAQ2D,aAAc5D,EAAMiB,WAAYiB,SAd3B,SAACC,GACpB,IAAM0B,EAAa,CACjB5C,WAAYkB,EAAEC,OAAOP,MACrBiC,UAAW9D,EAAM8D,UACjBC,QAAS/D,EAAM+D,SAEjB/D,EAAMgE,cAAcH,IAQd,UACE,wBAAQhC,MAAM,SAAd,wBA9Be,CACvB,gBACA,kBACA,+BACA,oBACA,aACA,iCACA,sBACA,gBACA,qCACA,qBACA,WACA,iCAmB0BX,KAAI,SAACD,GAAD,OACpB,wBAAQY,MAAOZ,EAAf,SACGA,GAD6BA,WANxC,OAYM,cAAC,EAAD,CAAuB4B,aAAc7C,EAAM8D,YAZjD,MAaK,cAAC,EAAD,CAAuBjB,aAAc7C,EAAM+D,gBCsFvCE,MAzHf,WACE,MAAwCzC,IAAMC,SAAS,CACrD,CACEyC,GAAI,iBACJC,YAAa,qCACbC,WAAY,GACZ1D,SAAU,CACR,CAAEO,WAAY,gBAAiB6C,UAAW,MAAOC,QAAS,WANhE,mBAAOM,EAAP,KAAqBC,EAArB,KAmEMC,EAAcF,EACjBnD,KAAI,SAACsD,GAAD,OAAiBA,EAAY9D,YACjC+D,OAEH,OACE,sBAAKxE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,yBAASA,UAAU,UAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,CAAmBS,SAAU6D,MAE/B,sBAAKtE,UAAU,2BAAf,UACE,qBAAIA,UAAU,QAAd,0BAEE,wBACEA,UAAU,SACVoB,MAAO,CAAEqD,WAAY,OACrBvE,QAhCe,WAC3B,IAAMwE,EAAcN,EAAarC,OAAS,EAE1CsC,EAAgB,GAAD,mBACVD,GADU,CAEb,CACEH,GAAG,gBAAD,OAAkBS,GACpBR,YAAa,qCACbC,WAAY,GACZ1D,SAAU,CAAC,CAAEO,WAAY,GAAI6C,UAAW,MAAOC,QAAS,aAoBlD,iCASDM,EAAanD,KAAI,SAACsD,GAAD,OAChB,cAAC,EAAD,CACEN,GAAIM,EAAYN,GAChBxD,SAAU8D,EAAY9D,SAEtB4B,WAAY,YArFP,SAACsC,GAClB,IAAMC,EAAkBR,EAAanD,KAAI,SAACsD,GACxC,GAAIA,EAAYN,KAAOU,EAAe,CAEpC,IAAME,EAAW,sBACZN,EAAY9D,UADA,CAEf,CAAEO,WAAY,GAAI6C,UAAW,MAAOC,QAAS,SAG/C,OAAO,2BAAKS,GAAZ,IAAyB9D,SAAUoE,IAEnC,OAAON,KAIXF,GAAgB,kBAAMO,KAuERvC,CAAWkC,EAAYN,KAL3B,SAQGM,EAAY9D,SAASQ,KAAI,SAAC6D,EAASC,GAAV,OACxB,cAAC,EAAD,CACE/D,WAAY8D,EAAQ9D,WACpB6C,UAAWiB,EAAQjB,UACnBC,QAASgB,EAAQhB,QACjBC,cAAe,SAACH,IA5EZ,SAACe,EAAeI,EAAcnB,GAClD,IAAMW,EAAcH,EAAaY,MAAK,SAACC,GAAD,OAAQA,EAAGhB,KAAOU,KAElDO,EAAkBX,EAAY9D,SAASQ,KAAI,SAAC6D,EAASK,GACzD,OAAIA,IAAQJ,EACHnB,EAEAkB,KAILM,EAAc,2BAAQb,GAAR,IAAqB9D,SAAUyE,IAE7CN,EAAkBR,EAAanD,KAAI,SAACsD,GACxC,OAAIA,EAAYN,KAAOU,EACdS,EAEAb,KAIXF,GAAgB,kBAAMO,KAwDJb,CAAcQ,EAAYN,GAAIc,EAAcnB,KAEzCkB,EAAQ9D,WAAa+D,OAbzBR,EAAYN,mBCjGjCoB,IAAStC,OACP,cAAC,IAAMuC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c40c1dc4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => (\n  <nav className=\"navbar is-light\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"/\">\n        <h1 className=\"title is-4\">Performeter</h1>\n      </a>\n    </div>\n\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <button className=\"button\" onClick={props.export}>\n            Export as Plain Text\n          </button>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst CompetencyCounter = (props) => {\n  let competencyCount = {\n    Communication: 0,\n    'Decision Making': 0,\n    'Diversity, Equity, Inclusion': 0,\n    'Health and Safety': 0,\n    Leadership: 0,\n    'Problem Solving and Innovation': 0,\n    'Quality Improvement': 0,\n    'Service Focus': 0,\n    'Stewardship and Managing Resources': 0,\n    'Strategic Planning': 0,\n    Teamwork: 0,\n    'Managing People (Supervisors)': 0,\n  };\n\n  competencyCount = props.comments.reduce((acc, current) => {\n    if (Object.keys(competencyCount).includes(current.competency)) {\n      acc[current.competency] += 1;\n    }\n    return acc;\n  }, competencyCount);\n\n  return (\n    <div className=\"fixed\">\n      <h1 className=\"title is-6\">Core Competencies</h1>\n\n      <ul className=\"unstyled-list\">\n        {Object.keys(competencyCount).map((key, index) => (\n          <li key={`key + ${index}`} style={{ padding: '3px' }}>\n            <div className=\"tags has-addons\">\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {competencyCount[key]}\n              </span>\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {key}\n              </span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CompetencyCounter;\n","import React from 'react';\n\nconst JobFunctions = (props) => {\n  const percentValues = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10];\n\n  const [state, setState] = React.useState({\n    percent: '',\n  });\n\n  return (\n    <div>\n      <div className=\"box\">\n        <h2 className=\"subtitle\">Job Function</h2>\n        <progress\n          className=\"progress is-success\"\n          value={isNaN(parseInt(state.percent)) ? 0 : props.comments.length}\n          max={parseInt(state.percent) / 10}\n        >\n          0%\n        </progress>\n        <div className=\"field\">\n          <label className=\"label\">Percentage</label>\n          <div className=\"control\">\n            <div className=\"select is-small\">\n              <select\n                onChange={(e) => {\n                  setState({ percent: e.target.value });\n                }}\n              >\n                <option>Select</option>\n                {percentValues.map((value) => (\n                  <option key={value}>{`${value}%`}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <div className=\"control\">\n            <textarea\n              className=\"textarea\"\n              placeholder=\"Copy and paste job function here\"\n            ></textarea>\n          </div>\n        </div>\n        <button className=\"button\" onClick={props.addComment}>\n          Add Supporting Comment\n        </button>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default JobFunctions;\n","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nclass InlineEditableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = { html: `<span>${props.initialValue}</span>` };\n  }\n\n  handleChange = (e) => {\n    this.setState({ html: e.target.value });\n  };\n\n  handleFocus = (e) => {\n    if (e.target.innerText === this.props.initialValue) {\n      this.setState({ html: '<span></span>' });\n    }\n  };\n\n  handleBlur = (e) => {\n    if (e.target.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '') === '') {\n      this.setState({ html: `<span>${this.props.initialValue}</span>` });\n    }\n  };\n\n  render = () => {\n    return (\n      <ContentEditable\n        innerRef={this.contentEditable}\n        html={this.state.html}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        style={{\n          display: 'inline',\n          minWidth: '2em',\n          padding: '0.25em',\n          outline: 'none',\n          borderBottom: '1px rgba(0,0,0,0.3) solid',\n        }}\n      />\n    );\n  };\n}\n\nexport default InlineEditableContent;\n","import React from 'react';\nimport InlineEditableContent from './InlineEditableContent';\n\nconst SupportingComment = (props) => {\n  const coreCompetencies = [\n    'Communication',\n    'Decision Making',\n    'Diversity, Equity, Inclusion',\n    'Health and Safety',\n    'Leadership',\n    'Problem Solving and Innovation',\n    'Quality Improvement',\n    'Service Focus',\n    'Stewardship and Managing Resources',\n    'Strategic Planning',\n    'Teamwork',\n    'Managing People (Supervisors)',\n  ];\n\n  const handleChange = (e) => {\n    const newComment = {\n      competency: e.target.value,\n      indicator: props.indicator,\n      example: props.example,\n    };\n    props.updateComment(newComment);\n  };\n\n  return (\n    <div className=\"box\">\n      <div style={{ display: 'block' }}>\n        In the competency of{' '}\n        <div className=\"select is-small\">\n          <select defaultValue={props.competency} onChange={handleChange}>\n            <option value=\"Select\">Select One</option>\n            {coreCompetencies.map((competency) => (\n              <option value={competency} key={competency}>\n                {competency}\n              </option>\n            ))}\n          </select>\n        </div>\n        , I <InlineEditableContent initialValue={props.indicator} />\n        by <InlineEditableContent initialValue={props.example} />\n      </div>\n    </div>\n  );\n};\n\nexport default SupportingComment;\n","import './App.css';\n\nimport React from 'react';\nimport Header from './components/Header';\nimport CompetencyCounter from './components/CompetencyCounter';\nimport JobFunctions from './components/JobFunctions';\nimport SupportingComment from './components/SupportingComment';\n\nfunction App() {\n  const [jobFunctions, setJobFunctions] = React.useState([\n    {\n      id: 'job-function-1',\n      description: 'job function description goes here',\n      percentage: '',\n      comments: [\n        { competency: 'Communication', indicator: 'foo', example: 'bar' },\n      ],\n    },\n  ]);\n\n  const addComment = (jobFunctionId) => {\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        debugger;\n        const newComments = [\n          ...jobFunction.comments,\n          { competency: '', indicator: 'foo', example: 'bar' },\n        ];\n\n        return { ...jobFunction, comments: newComments };\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const updateComment = (jobFunctionId, commentIndex, newComment) => {\n    const jobFunction = jobFunctions.find((jf) => jf.id === jobFunctionId);\n\n    const updatedComments = jobFunction.comments.map((comment, idx) => {\n      if (idx === commentIndex) {\n        return newComment;\n      } else {\n        return comment;\n      }\n    });\n\n    const newJobFunction = { ...jobFunction, comments: updatedComments };\n\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        return newJobFunction;\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const handleAddJobFunction = () => {\n    const incrementId = jobFunctions.length + 1;\n\n    setJobFunctions([\n      ...jobFunctions,\n      {\n        id: `job-function-${incrementId}`,\n        description: 'job function description goes here',\n        percentage: '',\n        comments: [{ competency: '', indicator: 'foo', example: 'bar' }],\n      },\n    ]);\n  };\n\n  const allComments = jobFunctions\n    .map((jobFunction) => jobFunction.comments)\n    .flat();\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n            <CompetencyCounter comments={allComments} />\n          </div>\n          <div className=\"column is-three-quarters\">\n            <h1 className=\"title\">\n              Job Functions\n              <button\n                className=\"button\"\n                style={{ marginLeft: '1em' }}\n                onClick={handleAddJobFunction}\n              >\n                Add Job Function\n              </button>\n            </h1>\n\n            {jobFunctions.map((jobFunction) => (\n              <JobFunctions\n                id={jobFunction.id}\n                comments={jobFunction.comments}\n                key={jobFunction.id}\n                addComment={() => {\n                  addComment(jobFunction.id);\n                }}\n              >\n                {jobFunction.comments.map((comment, commentIndex) => (\n                  <SupportingComment\n                    competency={comment.competency}\n                    indicator={comment.indicator}\n                    example={comment.example}\n                    updateComment={(newComment) => {\n                      updateComment(jobFunction.id, commentIndex, newComment);\n                    }}\n                    key={comment.competency + commentIndex}\n                  />\n                ))}\n              </JobFunctions>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}