{"version":3,"sources":["components/Header.js","components/Tabs.js","components/CompetencyCounter.js","components/JobFunction.js","components/InlineEditableContent.js","components/SupportingComment.js","components/JobFunctions.js","components/Achievements.js","components/Goals.js","App.js","index.js"],"names":["Header","state","handleReset","className","href","onClick","string","map","item","percentage","description","comments","reduce","acc","curr","concat","competency","indicator","example","window","open","document","write","exportText","Tabs","activeNav","handleNav","CompetencyCounter","competencyCount","Communication","Leadership","Teamwork","current","Object","keys","includes","key","index","style","padding","JobFunction","props","jobFunction","id","value","length","max","parseInt","name","onChange","updateJobFunction","placeholder","addComment","children","InlineEditableContent","handleChange","e","setState","html","target","isEmpty","handleFocus","innerText","defaultValue","handleBlur","replace","initialValue","render","baseStyle","outline","borderBottom","styles","display","minWidth","innerRef","contentEditable","onFocus","onBlur","tagName","React","createRef","Component","SupportingComment","updateComment","deleteComment","marginLeft","marginBottom","newComment","updatedComment","JobFunctions","jobFunctions","handleAddJobFunction","comment","commentIndex","Achievements","achievements","onAchievementsChange","Goals","goals","onGoalsChange","App","initialState","JSON","parse","localStorage","getItem","useState","setJobFunctions","setAchievements","setGoals","setActiveNav","useEffect","data","setItem","stringify","jobFunctionId","newJobFunctions","newComments","find","jf","updatedComments","idx","newJobFunction","filteredComments","filter","_","updatedJobFunction","Math","random","toString","slice","updatedJobFunctions","handleAchievementsChange","event","handleGoalsChange","allComments","flat","getActiveTabSection","ReactDOM","StrictMode","getElementById"],"mappings":"yPAgDeA,EAzBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACb,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,mBAAGA,UAAU,cAAcC,KAAK,IAAhC,SACE,oBAAID,UAAU,aAAd,6BAIJ,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,UAAf,UACE,wBAAQA,UAAU,mBAAmBE,QAASH,EAA9C,mBAGA,wBAAQC,UAAU,SAASE,QAAS,kBApC7B,SAACJ,GAClB,IAYMK,EAZOL,EAAMM,KAAI,SAACC,GAStB,MARa,aAASA,EAAKC,WAAd,cAA8BD,EAAKE,YAAnC,SAEIF,EAAKG,SAASC,QAAO,SAACC,EAAKC,GAC1C,OAAOD,EAAIE,OAAJ,+BACmBD,EAAKE,WADxB,eACyCF,EAAKG,UAD9C,eAC8DH,EAAKI,QADnE,eAGN,OAKeN,QAAO,SAACC,EAAKC,GAC/B,OAAOD,EAAIE,OAAOD,KACjB,IAESK,OAAOC,KAAK,cAAe,GAAI,UACvCC,SAASC,MAAMhB,GAkBiCiB,CAAWtB,IAArD,yCCbGuB,EAvBF,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACzB,OACE,qBAAKvB,UAAU,OAAf,SACE,+BACE,oBAAIA,UAAyB,kBAAdsB,EAAgC,YAAc,KAA7D,SACE,mBAAGrB,KAAK,gBAAgBC,QAASqB,EAAjC,6BAIF,oBAAIvB,UAAyB,iBAAdsB,EAA+B,YAAc,KAA5D,SACE,mBAAGrB,KAAK,gBAAgBC,QAASqB,EAAjC,4BAIF,oBAAIvB,UAAyB,iBAAdsB,EAA+B,YAAc,KAA5D,SACE,mBAAGrB,KAAK,SAASC,QAASqB,EAA1B,kCCsCKC,EArDW,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACvBiB,EAAkB,CACpBC,cAAe,EACf,kBAAmB,EACnB,+BAAgC,EAChC,oBAAqB,EACrBC,WAAY,EACZ,iCAAkC,EAClC,sBAAuB,EACvB,gBAAiB,EACjB,qCAAsC,EACtC,qBAAsB,EACtBC,SAAU,EACV,gCAAiC,GAUnC,OAPAH,EAAkBjB,EAASC,QAAO,SAACC,EAAKmB,GAItC,OAHIC,OAAOC,KAAKN,GAAiBO,SAASH,EAAQhB,cAChDH,EAAImB,EAAQhB,aAAe,GAEtBH,IACNe,GAGD,sBAAKzB,UAAU,QAAf,UACE,oBAAIA,UAAU,aAAd,+BAEA,oBAAIA,UAAU,gBAAd,SACG8B,OAAOC,KAAKN,GAAiBrB,KAAI,SAAC6B,EAAKC,GAAN,OAChC,oBAA2BC,MAAO,CAAEC,QAAS,OAA7C,SACE,sBAAKpC,UAAU,kBAAf,UACE,sBACEA,UACE,QAAUyB,EAAgBQ,GAAO,EAAI,aAAe,IAFxD,SAKGR,EAAgBQ,KAEnB,sBACEjC,UACE,QAAUyB,EAAgBQ,GAAO,EAAI,aAAe,IAFxD,SAKGA,QAdP,gBAAkBC,aC2BbG,EAxDK,SAACC,GACnB,IACA,EAAkDA,EAAMC,YAAhD/B,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,YAAaiC,EAA/B,EAA+BA,GAAIlC,EAAnC,EAAmCA,WAEnC,OACE,8BACE,sBAAKN,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,0BACA,0BACEA,UAAU,sBACVyC,MAAOnC,EAAaE,EAASkC,OAAS,EACtCC,IAAKrC,EAAasC,SAAStC,GAAc,GAAK,EAHhD,SAKGA,IAEH,sBAAKN,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,wBACA,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,yBACE6C,KAAK,aACLJ,MAAOnC,EACPwC,SAAUR,EAAMS,kBAHlB,UAKE,wBAAQN,MAAM,GAAd,oBAvBQ,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAwB/BrC,KAAI,SAACqC,GAAD,OACjB,wBACEA,MAAK,UAAKA,EAAL,KADP,mBAGKA,EAHL,gBAEUD,EAFV,YAEgBC,iBAO1B,sBAAKzC,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,yBACA,qBAAKA,UAAU,UAAf,SACE,0BACE6C,KAAK,cACL7C,UAAU,WACVgD,YAAY,mCACZP,MAAOlC,EACPuC,SAAUR,EAAMS,yBAItB,wBAAQ/C,UAAU,SAASE,QAASoC,EAAMW,WAA1C,oCAGCX,EAAMY,e,yCCKAC,E,kDArDb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAKRc,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,KAAMF,EAAEG,OAAOf,MAAOgB,SAAS,IAC/C,EAAKnB,MAAMQ,SAASO,IARH,EAWnBK,YAAc,SAACL,GACTA,EAAEG,OAAOG,YAAc,EAAKrB,MAAMsB,cACpC,EAAKN,SAAS,CAAEC,KAAM,GAAIE,SAAS,KAbpB,EAiBnBI,WAAa,SAACR,GAC6C,KAArDA,EAAEG,OAAOG,UAAUG,QAAQ,iBAAkB,KAC/C,EAAKR,SAAS,CAAEC,KAAK,GAAD,OAAK,EAAKjB,MAAMyB,cAAgBN,SAAS,KAnB9C,EAuBnBO,OAAS,WACP,IAAMC,EAAY,CAChB7B,QAAS,SACT8B,QAAS,OACTC,aAAc,6BAQVC,EAAS,EAAKtE,MAAM2D,QAAX,2BALI,CACjBY,QAAS,eACTC,SAAU,QAIYL,GACpBA,EAEJ,OACE,cAAC,IAAD,CACEM,SAAU,EAAKC,gBACfjB,KAAM,EAAKzD,MAAMyD,KACjBT,SAAU,EAAKM,aACfqB,QAAS,EAAKf,YACdgB,OAAQ,EAAKb,WACb1B,MAAOiC,EACPO,QAAQ,UA7CZ,EAAKH,gBAAkBI,IAAMC,YAC7B,EAAK/E,MAAQ,CAAEyD,KAAK,GAAD,OAAKjB,EAAMyB,cAAgBN,SAAS,GAHtC,E,UADemB,IAAME,WCuF3BC,EAvFW,SAAC,GAMpB,IALLlE,EAKI,EALJA,WACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAiE,EAEI,EAFJA,cACAC,EACI,EADJA,cA8CA,OACE,sBAAKjF,UAAU,MAAf,UACE,wBACEA,UAAU,mBACVmC,MAAO,CAAE+C,WAAY,MAAOC,aAAc,SAC1CjF,QAAS,kBAAM+E,OAEjB,sBAAK9C,MAAO,CAAEkC,QAAS,SAAvB,iCACuB,IACrB,qBAAKrE,UAAU,kBAAf,SACE,yBAAQ4D,aAAc/C,EAAYiC,SAvCrB,SAACO,GACpB,IAAM+B,EAAa,CACjBvE,WAAYwC,EAAEG,OAAOf,MACrB3B,UAAWA,EACXC,QAASA,GAEXiE,EAAcI,IAiCR,UACE,wBAAQ3C,MAAM,SAAd,wBAvDe,CACvB,gBACA,kBACA,+BACA,oBACA,aACA,iCACA,sBACA,gBACA,qCACA,qBACA,WACA,iCA4C0BrC,KAAI,SAACS,GAAD,OACpB,wBAAQ4B,MAAO5B,EAAf,SACGA,GAD6BA,WANxC,MAYM,IACJ,cAAC,EAAD,CACEkD,aAAcjD,EACd8C,aAAa,yBACbd,SA3CgB,SAACO,GACvB,IAAMgC,EAAiB,CACrBxE,aACAC,UAAWuC,EAAEG,OAAOf,MACpB1B,WAGFiE,EAAcK,MAoBZ,KAkBK,IACH,cAAC,EAAD,CACEtB,aAAchD,EACd6C,aAAa,qBACbd,SAvCc,SAACO,GACrB,IAAMgC,EAAiB,CACrBxE,aACAC,YACAC,QAASsC,EAAEG,OAAOf,OAGpBuC,EAAcK,aCGHC,EAlDM,SAAC,GAOf,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,qBACAvC,EAII,EAJJA,WACAF,EAGI,EAHJA,kBACAiC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OACE,qCACE,qBAAIjF,UAAU,QAAd,0BAEE,wBACEA,UAAU,SACVmC,MAAO,CAAE+C,WAAY,OACrBhF,QAASsF,EAHX,iCASDD,EAAanF,KAAI,SAACmC,GAAD,OAChB,cAAC,EAAD,CACEA,YAAaA,EAEbU,WAAY,WACVA,EAAWV,EAAYC,KAEzBO,kBAAmB,SAACM,GAClBN,EAAkBR,EAAYC,GAAIa,IAPtC,SAUGd,EAAY/B,SAASJ,KAAI,SAACqF,EAASC,GAAV,OACxB,cAAC,EAAD,CACE7E,WAAY4E,EAAQ5E,WACpBC,UAAW2E,EAAQ3E,UACnBC,QAAS0E,EAAQ1E,QACjBiE,cAAe,SAACI,GACdJ,EAAczC,EAAYC,GAAIkD,EAAcN,IAE9CH,cAAe,kBAAMA,EAAc1C,EAAamD,KAC3CD,EAAQ5E,WAAa6E,OAjBzBnD,EAAYC,WCJZmD,EAtBM,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,qBACpC,OACE,qCACE,oBAAI7F,UAAU,QAAd,0BACA,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,0BACA,qBAAKA,UAAU,UAAf,SACE,0BACE6C,KAAK,cACL7C,UAAU,WACVgD,YAAY,oCACZP,MAAOmD,EACP9C,SAAU+C,eCSTC,EAtBD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACtB,OACE,qCACE,oBAAIhG,UAAU,QAAd,mBACA,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,mBACA,qBAAKA,UAAU,UAAf,SACE,0BACE6C,KAAK,QACL7C,UAAU,WACVgD,YAAY,6BACZP,MAAOsD,EACPjD,SAAUkD,eCkLTC,MAvLf,WAEE,IAAMC,EAAe,kBACnBC,KAAKC,MAAMpF,OAAOqF,aAAaC,QAAQ,iBAEzC,EAAwCC,mBACtCL,EAAaX,cAAgB,IAD/B,mBAAOA,EAAP,KAAqBiB,EAArB,KAGA,EAAwCD,mBACtCL,EAAaN,cAAgB,IAD/B,mBAAOA,EAAP,KAAqBa,EAArB,KAGA,EAA0BF,mBAASL,EAAaH,OAAS,IAAzD,mBAAOA,EAAP,KAAcW,EAAd,KACA,EAAkCH,mBAAS,iBAA3C,mBAAOjF,EAAP,KAAkBqF,EAAlB,KAEAC,qBAAU,WACR,IAAMC,EAAO,CACXtB,eACAK,eACAG,SAEF/E,OAAOqF,aAAaS,QAAQ,cAAeX,KAAKY,UAAUF,MACzD,CAACtB,EAAcK,EAAcG,IAEhC,IAAM9C,EAAa,SAAC+D,GAClB,IAAMC,EAAkB1B,EAAanF,KAAI,SAACmC,GACxC,GAAIA,EAAYC,KAAOwE,EAAe,CACpC,IAAME,EAAW,sBACZ3E,EAAY/B,UADA,CAEf,CACEK,WAAY,GACZC,UAAW,yBACXC,QAAS,wBAIb,OAAO,2BAAKwB,GAAZ,IAAyB/B,SAAU0G,IAEnC,OAAO3E,KAIXiE,GAAgB,kBAAMS,MAGlBjC,EAAgB,SAACgC,EAAetB,EAAcN,GAClD,IAAM7C,EAAcgD,EAAa4B,MAAK,SAACC,GAAD,OAAQA,EAAG5E,KAAOwE,KAElDK,EAAkB9E,EAAY/B,SAASJ,KAAI,SAACqF,EAAS6B,GACzD,OAAIA,IAAQ5B,EACHN,EAEAK,KAIL8B,EAAc,2BAAQhF,GAAR,IAAqB/B,SAAU6G,IAE7CJ,EAAkB1B,EAAanF,KAAI,SAACmC,GACxC,OAAIA,EAAYC,KAAOwE,EACdO,EAEAhF,KAIXiE,GAAgB,kBAAMS,MAGlBhC,EAAgB,SAAC1C,EAAamD,GAClC,IAAM8B,EAAmBjF,EAAY/B,SAASiH,QAC5C,SAACC,EAAGxF,GAAJ,OAAcA,IAAUwD,KAGpBiC,EAAkB,2BAAQpF,GAAR,IAAqB/B,SAAUgH,IAEjDP,EAAkB1B,EAAanF,KAAI,SAACmC,GAAD,OACvCA,EAAYC,KAAOmF,EAAmBnF,GAClCmF,EACApF,KAGNiE,GAAgB,kBAAMS,MAGlBzB,EAAuB,WAC3BgB,EAAgB,GAAD,mBACVjB,GADU,CAEb,CACE/C,GAAG,gBAAD,OAAkBoF,KAAKC,SAASC,SAAS,IAAIC,MAAM,IACrDxH,YAAa,qCACbD,WAAY,GACZE,SAAU,CACR,CACEK,WAAY,GACZC,UAAW,yBACXC,QAAS,4BAObgC,EAAoB,SAACP,EAAIa,GAC7B,IAAM2E,EAAsBzC,EAAanF,KAAI,SAACmC,GAAD,OAC3CA,EAAYC,KAAOA,EAAnB,2BACSD,GADT,kBACuBc,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOf,QAC5CF,KAGNiE,EAAgBwB,IAIZC,EAA2B,SAACC,GAChCzB,EAAgByB,EAAM1E,OAAOf,QAIzB0F,EAAoB,SAACD,GACzBxB,EAASwB,EAAM1E,OAAOf,QASlB2F,EAAc7C,EACjBnF,KAAI,SAACmC,GAAD,OAAiBA,EAAY/B,YACjC6H,OA6BH,OACE,sBAAKrI,UAAU,MAAf,UACE,cAAC,EAAD,CAAQF,MAAOyF,EAAcxF,YAvCb,WAClByG,EAAgB,IAChBC,EAAgB,IAChBC,EAAS,OAqCP,yBAAS1G,UAAU,UAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,CAAmBQ,SAAU4H,MAE/B,sBAAKpI,UAAU,2BAAf,UACE,cAAC,EAAD,CACEsB,UAAWA,EACXC,UAAW,SAAC8B,GACVsD,EAAatD,EAAEG,OAAOG,cAvCR,WAC1B,OAAQrC,GACN,IAAK,gBACH,OACE,cAAC,EAAD,CACEiE,aAAcA,EACdC,qBAAsBA,EACtBvC,WAAYA,EACZF,kBAAmBA,EACnBiC,cAAeA,EACfC,cAAeA,IAGrB,IAAK,eACH,OACE,cAAC,EAAD,CACEW,aAAcA,EACdC,qBAAsBoC,IAG5B,IAAK,eACH,OAAO,cAAC,EAAD,CAAOlC,MAAOA,EAAOC,cAAemC,IAC7C,QACE,OAAO,MAoBFG,eClLbC,IAASvE,OACP,cAAC,IAAMwE,WAAP,UACE,cAAC,EAAD,MAEFtH,SAASuH,eAAe,W","file":"static/js/main.f7552076.chunk.js","sourcesContent":["import React from 'react';\n\nconst exportText = (state) => {\n  const text = state.map((item) => {\n    const heading = `<p>${item.percentage} - ${item.description} </p>`;\n\n    const comments = item.comments.reduce((acc, curr) => {\n      return acc.concat(\n        `In the competency of ${curr.competency}, I ${curr.indicator} by ${curr.example}<br><br>`\n      );\n    }, '');\n\n    return heading + comments;\n  });\n\n  const string = text.reduce((acc, curr) => {\n    return acc.concat(curr);\n  }, '');\n\n  const wnd = window.open('about:blank', '', '_blank');\n  wnd.document.write(string);\n};\n\nconst Header = ({ state, handleReset }) => (\n  <nav className=\"navbar is-light\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"/\">\n        <h1 className=\"title is-4\">PerforMeter</h1>\n      </a>\n    </div>\n\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <button className=\"button is-danger\" onClick={handleReset}>\n              Reset\n            </button>\n            <button className=\"button\" onClick={() => exportText(state)}>\n              Export as Text\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Tabs = ({ activeNav, handleNav }) => {\n  return (\n    <div className=\"tabs\">\n      <ul>\n        <li className={activeNav === 'Job Functions' ? 'is-active' : null}>\n          <a href=\"#JobFunctions\" onClick={handleNav}>\n            Job Functions\n          </a>\n        </li>\n        <li className={activeNav === 'Achievements' ? 'is-active' : null}>\n          <a href=\"#Achievements\" onClick={handleNav}>\n            Achievements\n          </a>\n        </li>\n        <li className={activeNav === 'Future Goals' ? 'is-active' : null}>\n          <a href=\"#Goals\" onClick={handleNav}>\n            Future Goals\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default Tabs;\n","import React from 'react';\n\nconst CompetencyCounter = ({ comments }) => {\n  let competencyCount = {\n    Communication: 0,\n    'Decision Making': 0,\n    'Diversity, Equity, Inclusion': 0,\n    'Health and Safety': 0,\n    Leadership: 0,\n    'Problem Solving and Innovation': 0,\n    'Quality Improvement': 0,\n    'Service Focus': 0,\n    'Stewardship and Managing Resources': 0,\n    'Strategic Planning': 0,\n    Teamwork: 0,\n    'Managing People (Supervisors)': 0,\n  };\n\n  competencyCount = comments.reduce((acc, current) => {\n    if (Object.keys(competencyCount).includes(current.competency)) {\n      acc[current.competency] += 1;\n    }\n    return acc;\n  }, competencyCount);\n\n  return (\n    <div className=\"fixed\">\n      <h1 className=\"title is-6\">Core Competencies</h1>\n\n      <ul className=\"unstyled-list\">\n        {Object.keys(competencyCount).map((key, index) => (\n          <li key={`key + ${index}`} style={{ padding: '3px' }}>\n            <div className=\"tags has-addons\">\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {competencyCount[key]}\n              </span>\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {key}\n              </span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CompetencyCounter;\n","import React from 'react';\n\nconst JobFunction = (props) => {\n  const percentValues = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10];\n  const { comments, description, id, percentage } = props.jobFunction;\n\n  return (\n    <div>\n      <div className=\"box\">\n        <h2 className=\"subtitle\">Job Function</h2>\n        <progress\n          className=\"progress is-success\"\n          value={percentage ? comments.length : 0}\n          max={percentage ? parseInt(percentage) / 10 : 0}\n        >\n          {percentage}\n        </progress>\n        <div className=\"field\">\n          <label className=\"label\">Percentage</label>\n          <div className=\"control\">\n            <div className=\"select is-small\">\n              <select\n                name=\"percentage\"\n                value={percentage}\n                onChange={props.updateJobFunction}\n              >\n                <option value=\"\">Select</option>\n                {percentValues.map((value) => (\n                  <option\n                    value={`${value}%`}\n                    key={`${id}-${value}`}\n                  >{`${value}%`}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <div className=\"control\">\n            <textarea\n              name=\"description\"\n              className=\"textarea\"\n              placeholder=\"Copy and paste job function here\"\n              value={description}\n              onChange={props.updateJobFunction}\n            ></textarea>\n          </div>\n        </div>\n        <button className=\"button\" onClick={props.addComment}>\n          Add Supporting Comment\n        </button>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default JobFunction;\n","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nclass InlineEditableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = { html: `${props.initialValue}`, isEmpty: false };\n  }\n\n  handleChange = (e) => {\n    this.setState({ html: e.target.value, isEmpty: false });\n    this.props.onChange(e);\n  };\n\n  handleFocus = (e) => {\n    if (e.target.innerText === this.props.defaultValue) {\n      this.setState({ html: '', isEmpty: true });\n    }\n  };\n\n  handleBlur = (e) => {\n    if (e.target.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '') === '') {\n      this.setState({ html: `${this.props.initialValue}`, isEmpty: false });\n    }\n  };\n\n  render = () => {\n    const baseStyle = {\n      padding: '0.25em',\n      outline: 'none',\n      borderBottom: '1px rgba(0,0,0,0.3) solid',\n    };\n\n    const emptyStyle = {\n      display: 'inline-block',\n      minWidth: '4em',\n    };\n\n    const styles = this.state.isEmpty\n      ? { ...emptyStyle, ...baseStyle }\n      : baseStyle;\n\n    return (\n      <ContentEditable\n        innerRef={this.contentEditable}\n        html={this.state.html}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        style={styles}\n        tagName=\"span\"\n      />\n    );\n  };\n}\n\nexport default InlineEditableContent;\n","import React from 'react';\nimport InlineEditableContent from './InlineEditableContent';\n\nconst SupportingComment = ({\n  competency,\n  indicator,\n  example,\n  updateComment,\n  deleteComment,\n}) => {\n  const coreCompetencies = [\n    'Communication',\n    'Decision Making',\n    'Diversity, Equity, Inclusion',\n    'Health and Safety',\n    'Leadership',\n    'Problem Solving and Innovation',\n    'Quality Improvement',\n    'Service Focus',\n    'Stewardship and Managing Resources',\n    'Strategic Planning',\n    'Teamwork',\n    'Managing People (Supervisors)',\n  ];\n\n  const handleChange = (e) => {\n    const newComment = {\n      competency: e.target.value,\n      indicator: indicator,\n      example: example,\n    };\n    updateComment(newComment);\n  };\n\n  const updateIndicator = (e) => {\n    const updatedComment = {\n      competency,\n      indicator: e.target.value,\n      example,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  const updateExample = (e) => {\n    const updatedComment = {\n      competency,\n      indicator,\n      example: e.target.value,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  return (\n    <div className=\"box\">\n      <button\n        className=\"delete is-danger\"\n        style={{ marginLeft: '99%', marginBottom: '.5rem' }}\n        onClick={() => deleteComment()}\n      ></button>\n      <div style={{ display: 'block' }}>\n        In the competency of{' '}\n        <div className=\"select is-small\">\n          <select defaultValue={competency} onChange={handleChange}>\n            <option value=\"Select\">Select One</option>\n            {coreCompetencies.map((competency) => (\n              <option value={competency} key={competency}>\n                {competency}\n              </option>\n            ))}\n          </select>\n        </div>\n        , I{' '}\n        <InlineEditableContent\n          initialValue={indicator}\n          defaultValue=\"[behavioral indicator]\"\n          onChange={updateIndicator}\n        />\n        by{' '}\n        <InlineEditableContent\n          initialValue={example}\n          defaultValue=\"[specific example]\"\n          onChange={updateExample}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SupportingComment;\n","import React from 'react';\nimport JobFunction from './JobFunction';\nimport SupportingComment from './SupportingComment';\n\nconst JobFunctions = ({\n  jobFunctions,\n  handleAddJobFunction,\n  addComment,\n  updateJobFunction,\n  updateComment,\n  deleteComment,\n}) => {\n  return (\n    <>\n      <h1 className=\"title\">\n        Job Functions\n        <button\n          className=\"button\"\n          style={{ marginLeft: '1em' }}\n          onClick={handleAddJobFunction}\n        >\n          Add Job Function\n        </button>\n      </h1>\n\n      {jobFunctions.map((jobFunction) => (\n        <JobFunction\n          jobFunction={jobFunction}\n          key={jobFunction.id}\n          addComment={() => {\n            addComment(jobFunction.id);\n          }}\n          updateJobFunction={(e) => {\n            updateJobFunction(jobFunction.id, e);\n          }}\n        >\n          {jobFunction.comments.map((comment, commentIndex) => (\n            <SupportingComment\n              competency={comment.competency}\n              indicator={comment.indicator}\n              example={comment.example}\n              updateComment={(newComment) => {\n                updateComment(jobFunction.id, commentIndex, newComment);\n              }}\n              deleteComment={() => deleteComment(jobFunction, commentIndex)}\n              key={comment.competency + commentIndex}\n            />\n          ))}\n        </JobFunction>\n      ))}\n    </>\n  );\n};\n\nexport default JobFunctions;\n","import React from 'react';\n\nconst Achievements = ({ achievements, onAchievementsChange }) => {\n  return (\n    <>\n      <h1 className=\"title\">Achievements</h1>\n      <div className=\"box\">\n        <div className=\"field\">\n          <label className=\"label\">Achievements</label>\n          <div className=\"control\">\n            <textarea\n              name=\"achievement\"\n              className=\"textarea\"\n              placeholder=\"Address your goals from last year\"\n              value={achievements}\n              onChange={onAchievementsChange}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Achievements;\n","import React from 'react';\n\nconst Goals = ({ goals, onGoalsChange }) => {\n  return (\n    <>\n      <h1 className=\"title\">Goals</h1>\n      <div className=\"box\">\n        <div className=\"field\">\n          <label className=\"label\">Goals</label>\n          <div className=\"control\">\n            <textarea\n              name=\"goals\"\n              className=\"textarea\"\n              placeholder=\"Plan out your future goals\"\n              value={goals}\n              onChange={onGoalsChange}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Goals;\n","import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tabs from './components/Tabs';\nimport CompetencyCounter from './components/CompetencyCounter';\nimport JobFunctions from './components/JobFunctions';\nimport Achievements from './components/Achievements';\nimport Goals from './components/Goals';\n\nfunction App() {\n  // use function to only run once per render\n  const initialState = () =>\n    JSON.parse(window.localStorage.getItem('performeter'));\n\n  const [jobFunctions, setJobFunctions] = useState(\n    initialState.jobFunctions || []\n  );\n  const [achievements, setAchievements] = useState(\n    initialState.achievements || ''\n  );\n  const [goals, setGoals] = useState(initialState.goals || '');\n  const [activeNav, setActiveNav] = useState('Job Functions');\n\n  useEffect(() => {\n    const data = {\n      jobFunctions,\n      achievements,\n      goals,\n    };\n    window.localStorage.setItem('performeter', JSON.stringify(data));\n  }, [jobFunctions, achievements, goals]); // only activate when these values change\n\n  const addComment = (jobFunctionId) => {\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        const newComments = [\n          ...jobFunction.comments,\n          {\n            competency: '',\n            indicator: '[behavioral indicator]',\n            example: '[specific example]',\n          },\n        ];\n\n        return { ...jobFunction, comments: newComments };\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const updateComment = (jobFunctionId, commentIndex, newComment) => {\n    const jobFunction = jobFunctions.find((jf) => jf.id === jobFunctionId);\n\n    const updatedComments = jobFunction.comments.map((comment, idx) => {\n      if (idx === commentIndex) {\n        return newComment;\n      } else {\n        return comment;\n      }\n    });\n\n    const newJobFunction = { ...jobFunction, comments: updatedComments };\n\n    const newJobFunctions = jobFunctions.map((jobFunction) => {\n      if (jobFunction.id === jobFunctionId) {\n        return newJobFunction;\n      } else {\n        return jobFunction;\n      }\n    });\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const deleteComment = (jobFunction, commentIndex) => {\n    const filteredComments = jobFunction.comments.filter(\n      (_, index) => index !== commentIndex\n    );\n\n    const updatedJobFunction = { ...jobFunction, comments: filteredComments };\n\n    const newJobFunctions = jobFunctions.map((jobFunction) =>\n      jobFunction.id === updatedJobFunction.id\n        ? updatedJobFunction\n        : jobFunction\n    );\n\n    setJobFunctions(() => newJobFunctions);\n  };\n\n  const handleAddJobFunction = () => {\n    setJobFunctions([\n      ...jobFunctions,\n      {\n        id: `job-function-${Math.random().toString(16).slice(2)}`,\n        description: 'job function description goes here',\n        percentage: '',\n        comments: [\n          {\n            competency: '',\n            indicator: '[behavioral indicator]',\n            example: '[specific example]',\n          },\n        ],\n      },\n    ]);\n  };\n\n  const updateJobFunction = (id, e) => {\n    const updatedJobFunctions = jobFunctions.map((jobFunction) =>\n      jobFunction.id === id\n        ? { ...jobFunction, [e.target.name]: e.target.value }\n        : jobFunction\n    );\n\n    setJobFunctions(updatedJobFunctions);\n  };\n\n  // Achievements Handlers\n  const handleAchievementsChange = (event) => {\n    setAchievements(event.target.value);\n  };\n\n  // Goals Handlers\n  const handleGoalsChange = (event) => {\n    setGoals(event.target.value);\n  };\n\n  const handleReset = () => {\n    setJobFunctions([]);\n    setAchievements('');\n    setGoals('');\n  };\n\n  const allComments = jobFunctions\n    .map((jobFunction) => jobFunction.comments)\n    .flat();\n\n  const getActiveTabSection = () => {\n    switch (activeNav) {\n      case 'Job Functions':\n        return (\n          <JobFunctions\n            jobFunctions={jobFunctions}\n            handleAddJobFunction={handleAddJobFunction}\n            addComment={addComment}\n            updateJobFunction={updateJobFunction}\n            updateComment={updateComment}\n            deleteComment={deleteComment}\n          />\n        );\n      case 'Achievements':\n        return (\n          <Achievements\n            achievements={achievements}\n            onAchievementsChange={handleAchievementsChange}\n          />\n        );\n      case 'Future Goals':\n        return <Goals goals={goals} onGoalsChange={handleGoalsChange} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header state={jobFunctions} handleReset={handleReset} />\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n            <CompetencyCounter comments={allComments} />\n          </div>\n          <div className=\"column is-three-quarters\">\n            <Tabs\n              activeNav={activeNav}\n              handleNav={(e) => {\n                setActiveNav(e.target.innerText);\n              }}\n            />\n\n            {getActiveTabSection()}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}