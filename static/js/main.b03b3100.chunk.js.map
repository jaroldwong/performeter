{"version":3,"sources":["components/Header.js","components/SectionTabs.js","components/CompetencyCounter.js","components/JobFunction.js","utils/constants.js","components/IndicatorDropdown.js","components/InlineEditableContent.js","components/SupportingComment.js","components/JobFunctions.js","components/Achievements.js","components/Goal.js","components/Goals.js","reducers/jobFunctionReducer.js","reducers/appReducer.js","contexts/GlobalContext.js","App.js","index.js"],"names":["Header","state","achievements","goals","resetData","color","Brand","Item","size","Menu","Container","align","Group","onClick","jobFunctionsText","map","item","percentage","description","comments","reduce","acc","curr","concat","competency","indicator","example","achievementsText","replace","goalsText","goal","title","value","string","window","open","document","write","exportText","SectionTabs","activeTab","updateNav","Tab","active","CompetencyCounter","competencyCount","current","Object","keys","includes","competencyColor","key","index","style","padding","hasAddons","JobFunction","props","jobFunction","id","weight","length","max","parseInt","Field","Label","Control","Select","name","onChange","updateJobFunction","Textarea","className","placeholder","addComment","children","CORE_COMPETENCIES","BEHAVIORAL_INDICATORS","Collaboration","IndicatorDropdown","onUpdate","useState","isActive","setIsActive","handleSetIndicator","e","preventDefault","target","innerHTML","aria-haspopup","aria-controls","prevState","role","href","InlineEditableContent","handleChange","setState","html","isEmpty","handleFocus","innerText","defaultValue","handleBlur","initialValue","render","baseStyle","outline","borderBottom","styles","display","minWidth","innerRef","contentEditable","onFocus","onBlur","tagName","React","createRef","Component","SupportingComment","updateComment","deleteComment","showIndicatorDropdown","setShowIndicatorDropdown","updateIndicator","remove","marginLeft","marginBottom","newComment","updatedComment","JobFunctions","jobFunctions","dispatch","type","payload","event","comment","commentIndex","jobFunctionId","Achievements","updateAchievements","Goal","handleUpdate","text","setText","newGoal","Goals","addGoal","updateGoal","jobFunctionReducer","action","Math","random","toString","slice","newComments","find","jf","updatedComments","idx","newJobFunction","filteredComments","filter","_","updatedJobFunction","Error","appReducer","tab","GlobalContext","createContext","GlobalContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","Provider","App","initialState","globalStore","useContext","setAchievements","setGoals","data","allComments","flat","Date","getTime","newGoals","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b03b3100.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Heading, Navbar } from 'react-bulma-components';\n\nconst exportText = ({ state, achievements, goals }) => {\n  const jobFunctionsTitle = '<p><strong>Job Functions</strong></p>';\n\n  const jobFunctionsText = state.map((item) => {\n    const heading = `<p>${item.percentage} - ${item.description} </p>`;\n\n    const comments = item.comments.reduce((acc, curr) => {\n      return acc.concat(\n        `In the competency of ${curr.competency}, I ${curr.indicator} by ${curr.example}<br><br>`\n      );\n    }, '');\n\n    return heading + comments;\n  });\n\n  const achievementsTitle = '<p><strong>Achievements</strong></p>';\n  const achievementsText = `${achievements.replace(/\\n/g, '<br>')}<br><br>`;\n  const goalsTitle = '<p><strong>Goals</strong></p>';\n  const goalsText = goals.map((goal) => {\n    return `${goal.title}<br> ${goal.value.replace(/\\n/g, '<br>')}`;\n  });\n\n  const combinedText = [\n    jobFunctionsTitle,\n    ...jobFunctionsText,\n    achievementsTitle,\n    achievementsText,\n    goalsTitle,\n    ...goalsText,\n  ];\n\n  const string = combinedText.reduce((acc, curr) => {\n    return acc.concat(curr);\n  }, '');\n\n  const wnd = window.open('about:blank', '', '_blank');\n  wnd.document.write(string);\n};\n\nconst Header = ({ state, achievements, goals, resetData }) => (\n  <Navbar color=\"light\">\n    <Navbar.Brand>\n      <Navbar.Item>\n        <Heading size={4}>PerforMeter</Heading>\n      </Navbar.Item>\n    </Navbar.Brand>\n\n    <Navbar.Menu>\n      <Navbar.Container align=\"right\">\n        <Button.Group>\n          <Button color=\"danger\" onClick={resetData}>\n            Reset\n          </Button>\n          <Button onClick={() => exportText({ state, achievements, goals })}>\n            Export as Text\n          </Button>\n        </Button.Group>\n      </Navbar.Container>\n    </Navbar.Menu>\n  </Navbar>\n);\n\nHeader.propTypes = {\n  state: PropTypes.arrayOf(PropTypes.object),\n  resetData: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\n\nimport { Tabs } from 'react-bulma-components/';\n\nconst SectionTabs = ({ activeTab, updateNav }) => {\n  return (\n    <Tabs>\n      <Tabs.Tab\n        active={activeTab === 'Job Functions' ? true : false}\n        onClick={updateNav}\n      >\n        Job Functions\n      </Tabs.Tab>\n      <Tabs.Tab\n        active={activeTab === 'Achievements' ? true : false}\n        onClick={updateNav}\n      >\n        Achievements\n      </Tabs.Tab>\n      <Tabs.Tab\n        active={activeTab === 'Future Goals' ? true : false}\n        onClick={updateNav}\n      >\n        Future Goals\n      </Tabs.Tab>\n    </Tabs>\n  );\n};\nexport default SectionTabs;\n","import React from 'react';\n\nimport { Heading, Tag } from 'react-bulma-components';\n\nconst CompetencyCounter = ({ comments }) => {\n  let competencyCount = {\n    'Continuous Improvement': 0,\n    'Continuous Learning': 0,\n    'Problem Solving': 0,\n    'Service Focus': 0,\n    'Belonging and Community': 0,\n    'Collaboration': 0,\n    'Communication': 0,\n    'Change Agility': 0,\n    'Mission and Vision Focus': 0,\n    'Stewardship': 0\n  };\n\n  competencyCount = comments.reduce((acc, current) => {\n    if (Object.keys(competencyCount).includes(current.competency)) {\n      acc[current.competency] += 1;\n    }\n    return acc;\n  }, competencyCount);\n\n  const competencyColor = Object.keys(competencyCount).reduce(\n    (acc, current) => {\n      if (competencyCount[current] === 0) {\n        acc[current] = '';\n      } else if (competencyCount[current] === 1) {\n        acc[current] = 'warning';\n      } else {\n        acc[current] = 'success';\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return (\n    <>\n      <Heading size={6}>Core Competencies</Heading>\n      <ul>\n        {Object.keys(competencyCount).map((key, index) => (\n          <li key={`key + ${index}`} style={{ padding: '3px' }}>\n            <Tag.Group hasAddons>\n              <Tag color={competencyColor[key]}>{competencyCount[key]}</Tag>\n              <Tag color={competencyColor[key]}>{key}</Tag>\n            </Tag.Group>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default CompetencyCounter;\n","import React from 'react';\nimport { Box, Button, Form, Heading, Progress } from 'react-bulma-components';\n\nconst JobFunction = (props) => {\n  const percentValues = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10];\n  const { comments, description, id, percentage } = props.jobFunction;\n\n  return (\n    <Box>\n      <Heading size={5} weight=\"light\">\n        Job Function\n      </Heading>\n      <Progress\n        color=\"success\"\n        value={percentage ? comments.length : 0}\n        max={percentage ? parseInt(percentage) / 10 : 0}\n      >\n        {percentage}\n      </Progress>\n      <Form.Field>\n        <Form.Label>Percentage</Form.Label>\n        <Form.Control>\n          <Form.Select\n            name=\"percentage\"\n            size=\"small\"\n            value={percentage}\n            onChange={props.updateJobFunction}\n          >\n            <option value=\"\">Select</option>\n            {percentValues.map((value) => (\n              <option\n                value={`${value}%`}\n                key={`${id}-${value}`}\n              >{`${value}%`}</option>\n            ))}\n          </Form.Select>\n        </Form.Control>\n      </Form.Field>\n      <Form.Field>\n        <Form.Label>Description</Form.Label>\n        <Form.Control>\n          <Form.Textarea\n            name=\"description\"\n            className=\"textarea\"\n            placeholder=\"Copy and paste job function here\"\n            value={description}\n            onChange={props.updateJobFunction}\n          ></Form.Textarea>\n        </Form.Control>\n      </Form.Field>\n      <Button onClick={props.addComment}>Add Supporting Comment</Button>\n      {props.children}\n    </Box>\n  );\n};\n\nexport default JobFunction;\n","export const CORE_COMPETENCIES = [\n  'Continuous Improvement',\n  'Continuous Learning',\n  'Problem Solving',\n  'Service Focus',\n  'Belonging and Community',\n  'Collaboration',\n  'Communication',\n  'Change Agility',\n  'Mission and Vision Focus',\n  'Stewardship'\n];\n\nexport const BEHAVIORAL_INDICATORS = {\n  'Continuous Improvement': [\n    'adopted ideas, technology, and practices that increase efficiency, eliminate waste, and improve performance',\n    'took initiative to make improvements to current work',\n    'used data, feedback, and input from others to improve the quality of products and services',\n  ],\n  'Continuous Learning': [\n    'took responsibility for development',\n    'maintained fluency in appropriate work applications, software, or tools',\n    'kept up-to-date on current research, trends, and technology',\n    'identified and pursued areas for development and training that will enhance job performance',\n    'sought coaching and feedback to increase self-awareness and personal growth'\n  ],\n  'Problem Solving': [\n    'evaluated the pros and cons, risks and benefits of different solutions',\n    'prioritized opportunities and challenges in order to solve urgent, high impact problems',\n    'worked effectively with others to solve problems and make decisions',\n    'sought input from partners',\n  ],\n  'Service Focus': [\n    'sought and used feedback from a variety of sources to improve service quality',\n    'ensured that stakeholder needs are fulfilled',\n    'honored commitments and kept promises',\n    'adapted service delivery to meet the needs of diverse client base'\n  ],\n  'Belonging and Community': [\n    'engaged others in a way that makes them feel valued and accepted',\n    'valued diverse people, experiences and ideas',\n    'cultivated and maintained an environment of inclusion that empowers all team members to contribute ideas and achieve goals',\n    'treated all people with dignity, respect, and equity'\n  ],\n  Collaboration: [\n    'cooperated with others',\n    'shared information and knowledge to identify and implement solutions in which all parties can benefit',\n    'helped and supported fellow employees in their work to contribute to overall success',\n    'placed the needs of the team above self-interest',\n    'built and maintained effective working relationships'\n  ],\n  'Communication': [\n    'consistently shared accurate, timely information',\n    'took into account audience and communication method',\n    'stated opinions honestly and in a straight-forward manner',\n    'maintained open dialogue with others',\n    'actively listened',\n  ],\n  'Change Agility': [\n    'adapted approaches as needed to address changing priorities',\n    'was flexible, open, and receptive to new approaches',\n    'stepped outside of comfort zone',\n    'sought to understand context while navigating through organizational change',\n    'recognized responses to change and responded in a way that is productive for the organization and team members'\n  ],\n  'Mission and Vision Focus': [\n    \"used the organization's mission and vision as guideposts for decision-making\",\n    'connected individual role and aligned goals in fulfillment of the UC mission and vision',\n    'inspired others to achieve the mission and vision of the organization and the University'\n  ],\n  'Stewardship': [\n    'acted in a manner consistent with the UC Standards of Ethical Conduct and other UC policies',\n    'utilized available resources to achieve organizational goals',\n    'modeled accountability',\n    'understood and adhered to safety guidelines',\n    'reported and corrected potential threats',\n    'modeled safe behaviors'\n  ]\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport { BEHAVIORAL_INDICATORS } from '../utils/constants';\n\nconst IndicatorDropdown = ({ competency, indicator, onUpdate }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const handleActiveToggle = () => {\n    setIsActive((prevState) => !prevState);\n  };\n\n  const handleSetIndicator = (e) => {\n    e.preventDefault();\n    onUpdate(e.target.innerHTML);\n  };\n\n  if (!competency) {\n    return (\n      <div className=\"dropdown\">\n        <div className=\"dropdown-trigger\">\n          <button\n            className=\"button is-small\"\n            aria-haspopup=\"true\"\n            aria-controls=\"dropdown-menu\"\n          >\n            <span>select a competency first</span>\n            <span className=\"icon is-small\">v</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`dropdown ${isActive && 'is-active'}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-small\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={handleActiveToggle}\n        >\n          <span>[behavioral indicator]</span>\n          <span className=\"icon is-small\">v</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {BEHAVIORAL_INDICATORS[competency].map((indicator, index) => (\n            <a\n              href=\"#\"\n              className=\"dropdown-item\"\n              key={`${indicator + index}`}\n              onClick={handleSetIndicator}\n            >\n              {indicator}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IndicatorDropdown;\n","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nclass InlineEditableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = { html: `${props.initialValue}`, isEmpty: false };\n  }\n\n  handleChange = (e) => {\n    this.setState({ html: e.target.value, isEmpty: false });\n    this.props.onChange(e);\n  };\n\n  handleFocus = (e) => {\n    if (e.target.innerText === this.props.defaultValue) {\n      this.setState({ html: '', isEmpty: true });\n    }\n  };\n\n  handleBlur = (e) => {\n    if (e.target.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '') === '') {\n      this.setState({ html: `${this.props.initialValue}`, isEmpty: false });\n    }\n  };\n\n  render = () => {\n    const baseStyle = {\n      padding: '0.25em',\n      outline: 'none',\n      borderBottom: '1px rgba(0,0,0,0.3) solid',\n    };\n\n    const emptyStyle = {\n      display: 'inline-block',\n      minWidth: '4em',\n    };\n\n    const styles = this.state.isEmpty\n      ? { ...emptyStyle, ...baseStyle }\n      : baseStyle;\n\n    return (\n      <ContentEditable\n        innerRef={this.contentEditable}\n        html={this.state.html}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        style={styles}\n        tagName=\"span\"\n      />\n    );\n  };\n}\n\nexport default InlineEditableContent;\n","import React, { useState } from 'react';\nimport IndicatorDropdown from './IndicatorDropdown';\nimport InlineEditableContent from './InlineEditableContent';\nimport { CORE_COMPETENCIES } from '../utils/constants';\nimport { Box, Button, Form } from 'react-bulma-components';\n\nconst SupportingComment = ({\n  competency,\n  indicator,\n  example,\n  updateComment,\n  deleteComment,\n}) => {\n  const [showIndicatorDropdown, setShowIndicatorDropdown] = useState(\n    indicator === '' ? true : false\n  );\n\n  const handleChange = (e) => {\n    const newComment = {\n      competency: e.target.value,\n      indicator: '',\n      example: example,\n    };\n    updateComment(newComment);\n  };\n\n  const updateIndicator = (e) => {\n    if (showIndicatorDropdown === true) {\n      setShowIndicatorDropdown(false);\n    }\n\n    const value = e.target ? e.target.value : e;\n    const updatedComment = {\n      competency,\n      indicator: value,\n      example,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  const updateExample = (e) => {\n    const updatedComment = {\n      competency,\n      indicator,\n      example: e.target.value,\n    };\n\n    updateComment(updatedComment);\n  };\n\n  return (\n    <Box>\n      <Button\n        remove\n        style={{ marginLeft: '99%', marginBottom: '.5rem' }}\n        onClick={() => deleteComment()}\n      ></Button>\n      <div style={{ display: 'block' }}>\n        In the competency of{' '}\n        <Form.Select size=\"small\" value={competency} onChange={handleChange}>\n          <option value=\"Select\">Select One</option>\n          {CORE_COMPETENCIES.map((competency) => (\n            <option value={competency} key={competency}>\n              {competency}\n            </option>\n          ))}\n        </Form.Select>\n        , I{' '}\n        {showIndicatorDropdown ? (\n          <IndicatorDropdown\n            competency={competency}\n            indicator={indicator}\n            onUpdate={updateIndicator}\n          />\n        ) : (\n          <InlineEditableContent\n            initialValue={indicator}\n            defaultValue=\"[behavioral indicator]\"\n            onChange={updateIndicator}\n          />\n        )}{' '}\n        by{' '}\n        <InlineEditableContent\n          initialValue={example}\n          defaultValue=\"[specific example]\"\n          onChange={updateExample}\n        />\n      </div>\n    </Box>\n  );\n};\n\nexport default SupportingComment;\n","import React from 'react';\nimport JobFunction from './JobFunction';\nimport SupportingComment from './SupportingComment';\nimport { Button, Heading } from 'react-bulma-components';\n\nconst JobFunctions = ({ jobFunctions, dispatch }) => {\n  const addJobFunction = () => {\n    dispatch({ type: 'ADD_JOB_FUNCTION' });\n  };\n\n  const updateJobFunction = (id, event) => {\n    dispatch({\n      type: 'UPDATE_JOB_FUNCTION',\n      payload: { id, event },\n    });\n  };\n\n  const addComment = (id) => {\n    dispatch({ type: 'ADD_COMMENT', payload: { id } });\n  };\n\n  const updateComment = (jobFunctionId, commentIndex, newComment) => {\n    dispatch({\n      type: 'UPDATE_COMMENT',\n      payload: { jobFunctionId, commentIndex, newComment },\n    });\n  };\n\n  const deleteComment = (jobFunction, commentIndex) => {\n    dispatch({\n      type: 'DELETE_COMMENT',\n      payload: { jobFunction, commentIndex },\n    });\n  };\n\n  return (\n    <>\n      <Heading size={3}>\n        Job Functions\n        <Button style={{ marginLeft: '1em' }} onClick={addJobFunction}>\n          Add Job Function\n        </Button>\n      </Heading>\n\n      {jobFunctions.map((jobFunction) => (\n        <JobFunction\n          jobFunction={jobFunction}\n          key={jobFunction.id}\n          addComment={() => {\n            addComment(jobFunction.id);\n          }}\n          updateJobFunction={(e) => {\n            updateJobFunction(jobFunction.id, e);\n          }}\n        >\n          {jobFunction.comments.map((comment, commentIndex) => (\n            <SupportingComment\n              competency={comment.competency}\n              indicator={comment.indicator}\n              example={comment.example}\n              updateComment={(newComment) => {\n                updateComment(jobFunction.id, commentIndex, newComment);\n              }}\n              deleteComment={() => deleteComment(jobFunction, commentIndex)}\n              key={comment.competency + commentIndex}\n            />\n          ))}\n        </JobFunction>\n      ))}\n    </>\n  );\n};\n\nexport default JobFunctions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Form, Heading } from 'react-bulma-components';\n\nconst Achievements = ({ achievements, updateAchievements }) => {\n  return (\n    <>\n      <Heading size={3}>Achievements</Heading>\n      <Box>\n        <Form.Field>\n          <Form.Label>Achievements</Form.Label>\n          <Form.Control>\n            <Form.Textarea\n              placeholder=\"Address your goals from last year\"\n              value={achievements}\n              onChange={updateAchievements}\n            />\n          </Form.Control>\n        </Form.Field>\n      </Box>\n    </>\n  );\n};\n\nAchievements.propTypes = {\n  achievements: PropTypes.string,\n  updateAchievements: PropTypes.func,\n};\n\nexport default Achievements;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Box, Form } from 'react-bulma-components';\n\nconst Goal = ({ id, title, value, handleUpdate }) => {\n  const [text, setText] = useState(value);\n\n  const handleChange = (event) => {\n    const text = event.target.value;\n    const newGoal = {\n      id,\n      title,\n      value: text,\n    };\n\n    setText(text);\n    handleUpdate(newGoal);\n  };\n\n  return (\n    <Box>\n      <Form.Field>\n        <Form.Label>{title}</Form.Label>\n        <Form.Control>\n          <Form.Textarea\n            placeholder=\"Plan out your future goals\"\n            value={text}\n            onChange={handleChange}\n          ></Form.Textarea>\n        </Form.Control>\n      </Form.Field>\n    </Box>\n  );\n};\n\nGoal.propTypes = {\n  title: PropTypes.string,\n  value: PropTypes.string,\n  handleUpdate: PropTypes.func,\n};\n\nexport default Goal;\n","import React from 'react';\nimport Goal from './Goal';\nimport PropTypes from 'prop-types';\n\nimport { Button, Heading } from 'react-bulma-components';\n\nconst Goals = ({ goals, addGoal, updateGoal }) => {\n  return (\n    <>\n      <Heading size={3}>\n        Goals\n        <Button style={{ marginLeft: '1em' }} onClick={addGoal}>\n          Add Goal\n        </Button>\n      </Heading>\n      {goals.map((goal) => (\n        <Goal\n          key={goal.id}\n          id={goal.id}\n          title={goal.title}\n          value={goal.value}\n          handleUpdate={updateGoal}\n        />\n      ))}\n    </>\n  );\n};\n\nGoals.propTypes = {\n  goals: PropTypes.arrayOf(PropTypes.object),\n  addGoal: PropTypes.func,\n  updateGoal: PropTypes.func,\n};\n\nexport default Goals;\n","export default function jobFunctionReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_JOB_FUNCTION':\n      return [\n        ...state,\n        {\n          id: `job-function-${Math.random().toString(16).slice(2)}`,\n          description: '',\n          percentage: '',\n          comments: [\n            {\n              competency: '',\n              indicator: '',\n              example: '[specific example]',\n            },\n          ],\n        },\n      ];\n    case 'UPDATE_JOB_FUNCTION':\n      const { name, value } = action.payload.event.target;\n\n      return state.map((jobFunction) =>\n        jobFunction.id === action.payload.id\n          ? {\n              ...jobFunction,\n              [name]: value,\n            }\n          : jobFunction\n      );\n    case 'ADD_COMMENT':\n      return state.map((jobFunction) => {\n        if (jobFunction.id === action.payload.id) {\n          const newComments = [\n            ...jobFunction.comments,\n            {\n              competency: '',\n              indicator: '',\n              example: '[specific example]',\n            },\n          ];\n\n          return { ...jobFunction, comments: newComments };\n        } else {\n          return jobFunction;\n        }\n      });\n    case 'UPDATE_COMMENT': {\n      const { jobFunctionId, commentIndex, newComment } = action.payload;\n      const jobFunction = state.find((jf) => jf.id === jobFunctionId);\n\n      const updatedComments = jobFunction.comments.map((comment, idx) => {\n        if (idx === commentIndex) {\n          return newComment;\n        } else {\n          return comment;\n        }\n      });\n\n      const newJobFunction = { ...jobFunction, comments: updatedComments };\n\n      return state.map((jobFunction) => {\n        if (jobFunction.id === jobFunctionId) {\n          return newJobFunction;\n        } else {\n          return jobFunction;\n        }\n      });\n    }\n    case 'DELETE_COMMENT': {\n      // debugger;\n      const { jobFunction, commentIndex } = action.payload;\n\n      // const { [commentIndex]: removed, ...remainingComments } =\n      //   jobFunction.comments;\n\n      const filteredComments = jobFunction.comments.filter(\n        (_, index) => index !== commentIndex\n      );\n\n      const updatedJobFunction = { ...jobFunction, comments: filteredComments };\n\n      return state.map((jobFunction) =>\n        jobFunction.id === updatedJobFunction.id\n          ? updatedJobFunction\n          : jobFunction\n      );\n    }\n    case 'RESET_JOB_FUNCTIONS': {\n      return [];\n    }\n    default:\n      throw new Error();\n  }\n}\n","export default function appReducer(state, action) {\n  switch (action.type) {\n    case 'SELECT_TAB':\n      return { ...state, activeTab: action.payload.tab };\n    case 'RESET_ACTIVE_TAB':\n      return { activeTab: 'Job Functions' };\n    default:\n      return state;\n  }\n}\n","import React, { createContext, useEffect, useReducer } from 'react';\nimport appReducer from '../reducers/appReducer';\n\nexport const GlobalContext = createContext();\n\nconst GlobalContextProvider = (props) => {\n  const [state, dispatch] = useReducer(appReducer, {}, () => {\n    const localData = localStorage.getItem('performeter-app-state');\n    return localData ? JSON.parse(localData) : { activeTab: 'Job Functions' };\n  });\n\n  useEffect(() => {\n    localStorage.setItem('performeter-app-state', JSON.stringify(state));\n  }, [state]);\n\n  return (\n    <GlobalContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default GlobalContextProvider;\n","import './App.css';\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Header from './components/Header';\nimport SectionTabs from './components/SectionTabs';\nimport CompetencyCounter from './components/CompetencyCounter';\nimport JobFunctions from './components/JobFunctions';\nimport Achievements from './components/Achievements';\nimport Goals from './components/Goals';\n\nimport jobFunctionReducer from './reducers/jobFunctionReducer';\nimport { GlobalContext } from './contexts/GlobalContext';\n\nfunction App() {\n  const initialState =\n    JSON.parse(window.localStorage.getItem('performeter')) || {};\n\n  const globalStore = {\n    state: useContext(GlobalContext).state,\n    dispatch: useContext(GlobalContext).dispatch,\n  };\n\n  const [state, dispatch] = useReducer(\n    jobFunctionReducer,\n    initialState.jobFunctions || []\n  );\n\n  const [achievements, setAchievements] = useState(\n    initialState.achievements || ''\n  );\n  const [goals, setGoals] = useState(initialState.goals || []);\n\n  useEffect(() => {\n    // const fetchData = async () => {\n    //   const response = await fetch('http://localhost:8080/posts');\n\n    //   // await only works inside async function\n    //   const data = await response.json();\n\n    //   console.log(data);\n    // };\n\n    // fetchData();\n\n    const data = {\n      jobFunctions: state,\n      achievements,\n      goals,\n    };\n    window.localStorage.setItem('performeter', JSON.stringify(data));\n  }, [state, achievements, goals]); // only activate when these values change\n\n  // Achievements Handlers\n  const updateAchievements = (event) => {\n    setAchievements(event.target.value);\n  };\n\n  // Goals Handlers\n  const addGoal = () => {\n    const newGoal = {\n      id: new Date().getTime(),\n      title: `Goal ${goals.length + 1}`,\n      value: '',\n    };\n    setGoals((prevState) => [...prevState, newGoal]);\n  };\n\n  const updateGoal = (newGoal) => {\n    const newGoals = goals.map((goal) =>\n      goal.id === newGoal.id ? newGoal : goal\n    );\n\n    setGoals(() => newGoals);\n  };\n\n  const updateNav = (e) => {\n    globalStore.dispatch({\n      type: 'SELECT_TAB',\n      payload: { tab: e.target.innerText },\n    });\n  };\n\n  const resetData = () => {\n    dispatch({ type: 'RESET_JOB_FUNCTIONS' });\n    setAchievements('');\n    setGoals([]);\n    globalStore.dispatch({ type: 'RESET_ACTIVE_TAB' });\n  };\n\n  const allComments = state.map((jobFunction) => jobFunction.comments).flat();\n\n  return (\n    <div className=\"App\">\n      <Header\n        state={state}\n        achievements={achievements}\n        goals={goals}\n        resetData={resetData}\n      />\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n            <CompetencyCounter comments={allComments} />\n          </div>\n          <div className=\"column is-three-quarters\">\n            <SectionTabs\n              activeTab={globalStore.state.activeTab}\n              updateNav={updateNav}\n            />\n\n            {\n              {\n                'Job Functions': (\n                  <JobFunctions jobFunctions={state} dispatch={dispatch} />\n                ),\n                Achievements: (\n                  <Achievements\n                    achievements={achievements}\n                    updateAchievements={updateAchievements}\n                  />\n                ),\n                'Future Goals': (\n                  <Goals\n                    goals={goals}\n                    addGoal={addGoal}\n                    updateGoal={updateGoal}\n                  />\n                ),\n              }[globalStore.state.activeTab]\n            }\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport GlobalContextProvider from './contexts/GlobalContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}