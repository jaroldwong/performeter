{"version":3,"sources":["components/Header.js","components/CompetencyCounter.js","components/JobFunctions.js","components/InlineEditableContent.js","components/SupportingComment.js","App.js","index.js"],"names":["Header","props","className","href","onClick","export","CompetencyCounter","competencyCount","Communication","Leadership","Teamwork","comments","reduce","acc","current","competency","Object","keys","map","key","index","style","padding","JobFunctions","React","useState","percent","state","setState","value","length","max","parseInt","onChange","e","target","placeholder","addComment","children","InlineEditableContent","handleChange","html","handleFocus","innerText","initialValue","handleBlur","replace","render","innerRef","contentEditable","onFocus","onBlur","display","minWidth","outline","borderBottom","createRef","Component","SupportingComment","defaultValue","newComment","indicator","example","updateComment","commentIndex","App","setComment","newState","comment","marginLeft","event","i","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed9d874e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => (\n  <nav className=\"navbar is-light\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"/\">\n        <h1 className=\"title is-4\">Performeter</h1>\n      </a>\n    </div>\n\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <button className=\"button\" onClick={props.export}>\n            Export as Plain Text\n          </button>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst CompetencyCounter = (props) => {\n  let competencyCount = {\n    Communication: 0,\n    'Decision Making': 0,\n    'Diversity, Equity, Inclusion': 0,\n    'Health and Safety': 0,\n    Leadership: 0,\n    'Problem Solving and Innovation': 0,\n    'Quality Improvement': 0,\n    'Service Focus': 0,\n    'Stewardship and Managing Resources': 0,\n    'Strategic Planning': 0,\n    Teamwork: 0,\n    'Managing People (Supervisors)': 0,\n  };\n\n  competencyCount = props.comments.reduce((acc, current) => {\n    if (current.competency !== 'Select') {\n      acc[current.competency] += 1;\n    }\n    return acc;\n  }, competencyCount);\n\n  return (\n    <div className=\"fixed\">\n      <h1 className=\"title is-6\">Core Competencies</h1>\n\n      <ul className=\"unstyled-list\">\n        {Object.keys(competencyCount).map((key, index) => (\n          <li key={`key + ${index}`} style={{ padding: '3px' }}>\n            <div className=\"tags has-addons\">\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {competencyCount[key]}\n              </span>\n              <span\n                className={\n                  'tag ' + (competencyCount[key] > 1 ? 'is-success' : '')\n                }\n              >\n                {key}\n              </span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CompetencyCounter;\n","import React, { useState } from 'react';\n\nconst JobFunctions = (props) => {\n  const percentValues = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10];\n\n  const [state, setState] = React.useState({\n    percent: '0%',\n  });\n\n  return (\n    <div>\n      <div className=\"box\">\n        <h2 className=\"subtitle\">Job Function</h2>\n        <progress\n          className=\"progress is-success\"\n          value={props.comments.length}\n          max={parseInt(state.percent) / 10}\n        >\n          0%\n        </progress>\n        <div className=\"field\">\n          <label className=\"label\">Percentage</label>\n          <div className=\"control\">\n            <div className=\"select is-small\">\n              <select\n                onChange={(e) => {\n                  setState({ percent: e.target.value });\n                }}\n              >\n                <option>Select</option>\n                {percentValues.map((value) => (\n                  <option key={value}>{`${value}%`}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <div className=\"control\">\n            <textarea\n              className=\"textarea\"\n              placeholder=\"Copy and paste job function here\"\n            ></textarea>\n          </div>\n        </div>\n        <button className=\"button\" onClick={props.addComment}>\n          Add Supporting Comment\n        </button>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default JobFunctions;\n","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nclass InlineEditableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = React.createRef();\n    this.state = { html: `<span>${props.initialValue}</span>` };\n  }\n\n  handleChange = (e) => {\n    this.setState({ html: e.target.value });\n  };\n\n  handleFocus = (e) => {\n    if (e.target.innerText === this.props.initialValue) {\n      this.setState({ html: '<span></span>' });\n    }\n  };\n\n  handleBlur = (e) => {\n    if (e.target.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '') === '') {\n      this.setState({ html: `<span>${this.props.initialValue}</span>` });\n    }\n  };\n\n  render = () => {\n    return (\n      <ContentEditable\n        innerRef={this.contentEditable}\n        html={this.state.html}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        style={{\n          display: 'inline',\n          minWidth: '2em',\n          padding: '0.25em',\n          outline: 'none',\n          borderBottom: '1px rgba(0,0,0,0.3) solid',\n        }}\n      />\n    );\n  };\n}\n\nexport default InlineEditableContent;\n","import React from 'react';\nimport InlineEditableContent from './InlineEditableContent';\n\nconst SupportingComment = (props) => {\n  const coreCompetencies = [\n    'Communication',\n    'Decision Making',\n    'Diversity, Equity, Inclusion',\n    'Health and Safety',\n    'Leadership',\n    'Problem Solving and Innovation',\n    'Quality Improvement',\n    'Service Focus',\n    'Stewardship and Managing Resources',\n    'Strategic Planning',\n    'Teamwork',\n    'Managing People (Supervisors)',\n  ];\n\n  const handleChange = (e) => {\n    const newComment = {\n      competency: e.target.value,\n      indicator: props.indicator,\n      example: props.example,\n    };\n    props.updateComment(props.commentIndex, newComment);\n  };\n\n  return (\n    <div className=\"box\">\n      <div style={{ display: 'block' }}>\n        In the competency of{' '}\n        <div className=\"select is-small\">\n          <select defaultValue={props.competency} onChange={handleChange}>\n            <option value=\"Select\">Select One</option>\n            {coreCompetencies.map((competency) => (\n              <option value={competency} key={competency}>\n                {competency}\n              </option>\n            ))}\n          </select>\n        </div>\n        , I <InlineEditableContent initialValue={props.indicator} />\n        by <InlineEditableContent initialValue={props.example} />\n      </div>\n    </div>\n  );\n};\n\nexport default SupportingComment;\n","import './App.css';\n\nimport React from 'react';\nimport Header from './components/Header';\nimport CompetencyCounter from './components/CompetencyCounter';\nimport JobFunctions from './components/JobFunctions';\nimport SupportingComment from './components/SupportingComment';\n\nfunction App() {\n  const [comments, setComment] = React.useState([]);\n\n  const addComment = (event) => {\n    setComment([\n      ...comments,\n      {\n        competency: 'Select',\n        indicator: '[behavioral indicator]',\n        example: '[specific example]',\n      },\n    ]);\n  };\n\n  const updateComment = (commentIndex, newComment) => {\n    const newState = comments.map((comment, index) => {\n      if (index === commentIndex) {\n        comment = newComment;\n      }\n\n      return comment;\n    });\n\n    setComment(newState);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n            <CompetencyCounter comments={comments} />\n          </div>\n          <div className=\"column is-three-quarters\">\n            <h1 className=\"title\">\n              Job Functions\n              <button className=\"button\" style={{ marginLeft: '1em' }}>\n                Add Job Function\n              </button>\n            </h1>\n\n            <JobFunctions\n              comments={comments}\n              addComment={addComment}\n              updateComment={updateComment}\n            >\n              {comments.map((comment, i) => (\n                <SupportingComment\n                  commentIndex={i}\n                  competency={comment.competency}\n                  indicator={comment.indicator}\n                  example={comment.example}\n                  updateComment={updateComment}\n                  key={comment.competency + i}\n                />\n              ))}\n            </JobFunctions>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}